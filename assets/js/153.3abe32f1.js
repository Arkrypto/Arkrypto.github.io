(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{1514:function(s,n,a){"use strict";a.r(n);var t=a(3),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"模拟"}},[s._v("模拟")]),s._v(" "),n("h3",{attrs:{id:"杨辉三角"}},[s._v("杨辉三角")]),s._v(" "),n("p",[s._v("力扣 119："),n("a",{attrs:{href:"https://leetcode.cn/problems/pascals-triangle-ii/",target:"_blank",rel:"noopener noreferrer"}},[s._v("杨辉三角 II"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("杨辉三角正常来说模拟更简单，但我选择用数学全排列解\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("msubsup",[n("mi",[s._v("C")]),n("mi",[s._v("m")]),n("mi",[s._v("n")])],1),n("mo",[s._v("=")]),n("mfrac",[n("mrow",[n("mi",[s._v("m")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("m")]),n("mo",[s._v("−")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")]),n("mo",[s._v("×")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mo",[s._v("×")]),n("mo",{attrs:{stretchy:"false"}},[s._v("(")]),n("mi",[s._v("m")]),n("mo",[s._v("−")]),n("mi",[s._v("n")]),n("mo",[s._v("+")]),n("mn",[s._v("1")]),n("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),n("mrow",[n("mi",[s._v("n")]),n("mo",{attrs:{stretchy:"false"}},[s._v("!")])],1)],1)],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nC_m^n = \\frac{m\\times(m-1)\\times......\\times(m-n+1)}{n!}\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.9614em","vertical-align":"-0.247em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.7144em"}},[n("span",{staticStyle:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])]),n("span",{staticStyle:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("n")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.247em"}},[n("span")])])])])]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"2.113em","vertical-align":"-0.686em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mopen nulldelimiter"}),n("span",{staticClass:"mfrac"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"1.427em"}},[n("span",{staticStyle:{top:"-2.314em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mclose"},[s._v("!")])])]),n("span",{staticStyle:{top:"-3.23em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),n("span",{staticStyle:{top:"-3.677em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal"},[s._v("m")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("m")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord"},[s._v("......")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mopen"},[s._v("(")]),n("span",{staticClass:"mord mathnormal"},[s._v("m")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("−")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord mathnormal"},[s._v("n")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("+")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord"},[s._v("1")]),n("span",{staticClass:"mclose"},[s._v(")")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[n("span")])])])]),n("span",{staticClass:"mclose nulldelimiter"})])])])])])])],1),s._v("\n第 m 行实际上就是\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("mo",{attrs:{stretchy:"false"}},[s._v("[")]),n("msubsup",[n("mi",[s._v("C")]),n("mi",[s._v("m")]),n("mn",[s._v("1")])],1),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("msubsup",[n("mi",[s._v("C")]),n("mi",[s._v("m")]),n("mn",[s._v("2")])],1),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("msubsup",[n("mi",[s._v("C")]),n("mi",[s._v("m")]),n("mrow",[n("mi",[s._v("m")]),n("mo",[s._v("−")]),n("mn",[s._v("1")])],1)],1),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("msubsup",[n("mi",[s._v("C")]),n("mi",[s._v("m")]),n("mi",[s._v("m")])],1),n("mo",{attrs:{stretchy:"false"}},[s._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n[C_m^1, C_m^2,...,C_m^{m-1}, C_m^m]\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"1.1141em","vertical-align":"-0.25em"}}),n("span",{staticClass:"mopen"},[s._v("[")]),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.8641em"}},[n("span",{staticStyle:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])]),n("span",{staticStyle:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mtight"},[s._v("1")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.247em"}},[n("span")])])])])]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.8641em"}},[n("span",{staticStyle:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])]),n("span",{staticStyle:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mtight"},[s._v("2")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.247em"}},[n("span")])])])])]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord"},[s._v("...")]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.8641em"}},[n("span",{staticStyle:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])]),n("span",{staticStyle:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")]),n("span",{staticClass:"mbin mtight"},[s._v("−")]),n("span",{staticClass:"mord mtight"},[s._v("1")])])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.247em"}},[n("span")])])])])]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"msupsub"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.7144em"}},[n("span",{staticStyle:{top:"-2.453em","margin-left":"-0.0715em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])]),n("span",{staticStyle:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),n("span",{staticClass:"sizing reset-size6 size3 mtight"},[n("span",{staticClass:"mord mathnormal mtight"},[s._v("m")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.247em"}},[n("span")])])])])]),n("span",{staticClass:"mclose"},[s._v("]")])])])])])])],1),s._v("\n为了避免计算超出边界，利用上一次的计算结果迭代计算，其实还可以改进，因为前后半部分一模一样，时间复杂度可以降低到 O(n/2)")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    vector<int> getRow(int rowIndex) {\n        vector<int> res;\n        res.push_back(1);\n        for(int i = 0; i < rowIndex; i++){\n            res.push_back((long)res[i]*(rowIndex-i)/(i+1));  \n        }\n        return res;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"螺旋矩阵"}},[s._v("螺旋矩阵")]),s._v(" "),n("p",[s._v("力扣 54："),n("a",{attrs:{href:"https://leetcode.cn/problems/spiral-matrix/",target:"_blank",rel:"noopener noreferrer"}},[s._v("螺旋矩阵"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("哈卵题目，麻烦死了，边界规定好")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    vector<vector<int>> generateMatrix(int n) {\n        vector<vector<int>> res(n, vector<int> (n));\n        int num = 1, tar = n*n;\n        //上下左右边界\n        int l = 0, t = 0, b = n-1, r = n-1;\n        while(num <= tar){\n            for(int i = l; i <= r; i++){\n                res[t][i] = num++;\n            }\n            t++;\n            for(int i = t; i <= b; i++){\n                res[i][r] = num++;\n            }\n            r--;\n            for(int i = r; i >= l; i--){\n                res[b][i] = num++;\n            }\n            b--;\n            for(int i = b; i >= t; i--){\n                res[i][l] = num++;\n            }\n            l++;\n        }\n        return res;\n    }\n}; \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"字符串相加-乘"}},[s._v("字符串相加 & 乘")]),s._v(" "),n("p",[s._v("力扣 415："),n("a",{attrs:{href:"https://leetcode.cn/problems/add-strings/?envType=study-plan&id=shu-ju-jie-gou-ji-chu",target:"_blank",rel:"noopener noreferrer"}},[s._v("字符串相加"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("力扣 43："),n("a",{attrs:{href:"https://leetcode.cn/problems/multiply-strings/?envType=study-plan&id=shu-ju-jie-gou-ji-chu",target:"_blank",rel:"noopener noreferrer"}},[s._v("字符串相乘"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("模拟加法、乘法，逐位计算，涉及到很多字符、字符串到数字的相互转换")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    string multiply(string num1, string num2) {\n        int m = num1.length(), n = num2.length();\n        if(m == 1 && num1[0] == '0'){\n            return \"0\";\n        }\n        if(n == 1 && num2[0] == '0'){\n            return \"0\";\n        }\n        string res;\n\n        for(int i = 1; i <= m; i++){\n            string row;\n            int cur = num1[m-i]-'0';\n            int flag = 0;\n            //cout << cur << endl;\n            for(int j = 1; j <= n; j++){\n                int fac = num2[n-j]-'0';\n                int ans = cur * fac + flag;\n                //cout << ans << endl;\n                if(ans >= 10){\n                    flag = ans/10;\n                    ans = ans%10;  \n                } else {\n                    flag = 0;\n                }\n                //cout << ans << endl;\n                row = to_string(ans) + row;\n                //cout << row << endl;\n            }\n            if(flag){\n                row = to_string(flag) + row;\n            }\n            for(int k = 1; k < i; k++){\n                //cout << row << endl;\n                row = row + \"0\";\n            }\n            if(i == 1){\n                res = row;\n            } else {\n                res = addStrings(res, row);\n            }\n        }\n        return res;\n    }\n\n    string addStrings(string num1, string num2) {\n        int m = num1.size(), n = num2.size();\n        int index = 1, flag = 0;\n        int length = n>m ? n:m;\n        string ans(length, ' ');\n        while(index <= m && index <= n){\n            int cur = (num1[m-index]-'0') + (num2[n-index]-'0');\n            if(flag){\n                cur++;\n                flag = false;\n            }\n            if(cur >= 10){\n                flag = true;\n                ans[length-index] = (cur-10)+'0';\n            } else {\n                ans[length-index] = cur+'0';\n            }\n            index++;\n        }\n        while(index <= m){\n            int cur = num1[m-index]-'0';\n            if(flag){\n                cur++;\n                flag = false;\n            }\n            if(cur >= 10){\n                flag = true;\n                ans[length-index] = (cur-10)+'0';\n            } else {\n                ans[length-index] = cur+'0';\n            }\n            index++;\n        }\n        while(index <= n){\n            int cur = num2[n-index]-'0';\n            if(flag){\n                cur++;\n                flag = false;\n            }\n            if(cur >= 10){\n                flag = true;\n                ans[length-index] = (cur-10)+'0';\n            } else {\n                ans[length-index] = cur+'0';\n            }\n            index++;\n        }\n        if(flag){\n            ans = \"1\" + ans;\n        }\n        return ans;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br")])]),n("h3",{attrs:{id:"两数相加"}},[s._v("两数相加")]),s._v(" "),n("p",[s._v("力扣 2："),n("a",{attrs:{href:"https://leetcode.cn/problems/add-two-numbers/",target:"_blank",rel:"noopener noreferrer"}},[s._v("两数相加"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("用链表模拟加法过程")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int flag = 0;\n        ListNode *head = new ListNode(-1);\n        ListNode *p = head, *p1 = l1, *p2 = l2;\n        while(p1 && p2){\n            int cur = p1->val + p2->val + flag;\n            if(cur >= 10){\n                flag = 1;\n            } else {\n                flag = 0;\n            }\n            p->next = new ListNode(cur%10);\n            p = p->next;\n            p1 = p1->next;\n            p2 = p2->next;\n        }\n        while(p1){\n            int cur = p1->val + flag;\n            if(cur >= 10){\n                flag = 1;\n            } else {\n                flag = 0;\n            }\n            p->next = new ListNode(cur%10);\n            p = p->next;\n            p1 = p1->next;\n        }\n        while(p2){\n            int cur = p2->val + flag;\n            if(cur >= 10){\n                flag = 1;\n            } else {\n                flag = 0;\n            }\n            p->next = new ListNode(cur%10);\n            p = p->next;\n            p2 = p2->next;\n        }\n        if(flag){\n            p->next = new ListNode(1);\n        }\n        return head->next;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br")])]),n("h3",{attrs:{id:"找出游戏的获胜者"}},[s._v("找出游戏的获胜者")]),s._v(" "),n("p",[s._v("力扣 1823："),n("a",{attrs:{href:"https://leetcode.cn/problems/find-the-winner-of-the-circular-game/",target:"_blank",rel:"noopener noreferrer"}},[s._v("找出游戏的获胜者"),n("OutboundLink")],1)]),s._v(" "),n("ul",[n("li",[s._v("模拟游戏过程，count 记录全局遍历次数")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int findTheWinner(int n, int k) {\n        vector<int> vec;\n        for(int i = 1; i <= n; i++){\n            vec.push_back(i);\n        }\n        int count = 1;\n        while(vec.size() > 1){\n            for(int i = 0; i < vec.size(); count++){\n                if(count % k == 0){\n                    vec.erase(vec.begin()+i);\n                } else {\n                    i++;\n                }\n            }\n        }\n        return vec[0];\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"二叉树的锯齿形层序遍历"}},[s._v("二叉树的锯齿形层序遍历")]),s._v(" "),n("p",[s._v("力扣 103："),n("a",{attrs:{href:"https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/",target:"_blank",rel:"noopener noreferrer"}},[s._v("二叉树的锯齿形层序遍历"),n("OutboundLink")],1)]),s._v(" "),n("ul",[n("li",[s._v("模拟遍历过程")]),s._v(" "),n("li",[s._v("记录行数奇偶，偶数正序，奇数 reverse()")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n        if(!root){ return res; }\n        vector<TreeNode*> nodes;\n        nodes.push_back(root);\n        int count = 0;\n        while(!nodes.empty()){\n            int n = nodes.size();\n            cout << nodes[0]->val << " ";\n            vector<int> row;\n            for(int i = 0; i < n; i++){\n                TreeNode* cur = nodes[i];\n                if(cur->left) { nodes.push_back(cur->left); }\n                if(cur->right) { nodes.push_back(cur->right); }\n                row.push_back(cur->val);\n            }\n            nodes.erase(nodes.begin(), nodes.begin()+n);\n            if(count % 2 == 0) { res.push_back(row); }\n            else { reverse(row.begin(), row.end()); res.push_back(row); }\n            count++;\n        }\n        return res;\n    }\n};\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h3",{attrs:{id:"单调栈"}},[s._v("单调栈")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.cn/problems/next-greater-element-i/",target:"_blank",rel:"noopener noreferrer"}},[s._v("496. 下一个更大元素 I - 力扣（Leetcode）"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("从"),n("code",[s._v("num2")]),s._v("中找到第一个比"),n("code",[s._v("nums[i], 0<=i<=size")]),s._v("大的元素，记为"),n("code",[s._v("res[i]")]),s._v("，返回"),n("code",[s._v("res")]),s._v("数组")]),s._v(" "),n("p",[s._v("从后往前遍历，记当前值为 val，去掉栈中小于 val 的元素，因为是从前向后看找"),n("strong",[s._v("第一个")]),s._v("比 val 大的元素，比当前小的元素会被大元素挡住，根本看不到，试着模拟这一过程，"),n("strong",[s._v("就像站队，矮的在后面会被高的挡住")])]),s._v(" "),n("p",[s._v("这样去掉小的元素后，栈顶元素即为比当前值大的第一个元素值，若栈空，说明没有元素比当前值大，记为 -1，用一个"),n("code",[s._v("map<当前值, 大于当前值的第一个元素值")]),s._v("记录这一结果，按照 num1 的顺序构造 res 并返回")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n        map<int, int> reco;\n        stack<int> stk;\n        int n = nums1.size(), m = nums2.size();\n        for(int i = 1; i <= m; i++){\n            // 从后往前遍历\n            int cur = nums2[m-i];\n            while(!stk.empty() && stk.top() < cur){\n                stk.pop();\n            }\n            reco[cur] = stk.empty() ? -1:stk.top();\n            stk.push(cur);\n        }\n        vector<int> res;\n        for(int i = 0; i < n; i++){\n            res.push_back(reco[nums1[i]]);\n        }\n        return res;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"摩尔投票法"}},[s._v("摩尔投票法")]),s._v(" "),n("p",[s._v("力扣 169："),n("a",{attrs:{href:"https://leetcode.cn/problems/majority-element/",target:"_blank",rel:"noopener noreferrer"}},[s._v("多数元素"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("找出数组中出现次数大于 n/2 的数")]),s._v(" "),n("ul",[n("li",[s._v("每遇到相同的数，count+1，每遇到不同的数，count-1")]),s._v(" "),n("li",[s._v("当 count = 0，切换选举人为当前元素并重置票数为 1")]),s._v(" "),n("li",[s._v("将数视作两类，即数量为 n/2 的数（计做 x）和其他数，x 因为超过 n/2 个，总会被切换为候选人，且其 count 会被其他数不断 -1，但最终一定会 >= 1，即 card 最终会被保留为 x")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int majorityElement(vector<int>& nums) {\n        int count = 1, card = nums[0];\n        for(int i = 1; i < nums.size(); i++){\n            if(count == 0){\n                card = nums[i];\n                count = 1;\n                continue;\n            }\n            if(card == nums[i]){\n                count++;\n            } else {\n                count--;\n            }\n        }\n        return card;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("229、多数元素 II")]),s._v(" "),n("p",[s._v("找出数组中数量大于 n/3 的数")]),s._v(" "),n("h2",{attrs:{id:"哈希算法"}},[s._v("哈希算法")]),s._v(" "),n("h3",{attrs:{id:"哈希设计"}},[s._v("哈希设计")]),s._v(" "),n("p",[s._v("力扣 705："),n("a",{attrs:{href:"https://leetcode.cn/problems/design-hashset/",target:"_blank",rel:"noopener noreferrer"}},[s._v("设计哈希集合"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("设计哈希集合，即 set，与上同理，更简单，使用"),n("code",[s._v("vector<int> set[]")]),s._v("进行储存")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class MyHashSet {\nprivate:\n    const static int LEN = 1000;\n\n    vector<int> set[LEN];\n\n    int getIndex(int key){\n        return key%LEN;\n    }\n\n    int getPos(int key, int index){\n        for(int i = 0; i < set[index].size(); i++){\n            if(set[index][i] == key){\n                return i;\n            }\n        }\n        return -1;\n    }\npublic:\n    MyHashSet() {\n    }\n\n    void add(int key) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos == -1){\n            set[index].push_back(key);\n        } else {\n            set[index][pos] = key;\n        }\n    }\n\n    void remove(int key) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos >= 0){\n            set[index].erase(set[index].begin()+pos);\n        }        \n    }\n\n    bool contains(int key) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos >= 0){\n            return true;\n        }   \n        return false;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br")])]),n("p",[s._v("力扣 706："),n("a",{attrs:{href:"https://leetcode.cn/problems/design-hashmap/",target:"_blank",rel:"noopener noreferrer"}},[s._v("设计哈希映射"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("设计哈希表，即 map，使用"),n("code",[s._v("vector<pair<int,int>> map[]")]),s._v("的结构，即二维数组进行储存，冲突解决使用简单的除余法，即通过"),n("code",[s._v("key%LEN")]),s._v("来确定数据所在的桶")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class MyHashMap {\n\nprivate:\n    const static int MAX_LEN = 1000;\n\n    vector<pair<int,int>> map[MAX_LEN];\n\n    int getIndex(int key){\n        return key%MAX_LEN;\n    }\n\n    int getPos(int key, int index){\n        for(int i = 0; i < map[index].size(); i++){\n            if(map[index][i].first == key){\n                return i;\n            }\n        }\n        return -1;\n    }\n\npublic:\n    MyHashMap() {\n    }\n\n    void put(int key, int value) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos == -1){\n            map[index].push_back(make_pair(key, value));\n        } else {\n            map[index][pos].second = value;\n        }\n    }\n\n    int get(int key) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos == -1){\n            return -1;\n        }\n        return map[index][pos].second;\n    }\n\n    void remove(int key) {\n        int index = getIndex(key);\n        int pos = getPos(key, index);\n        if(pos >= 0){\n            map[index].erase(map[index].begin()+pos);\n        }\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("h3",{attrs:{id:"单词规律"}},[s._v("单词规律")]),s._v(" "),n("p",[s._v("力扣 290："),n("a",{attrs:{href:"https://leetcode.cn/problems/word-pattern/?envType=study-plan&id=shu-ju-jie-gou-ji-chu",target:"_blank",rel:"noopener noreferrer"}},[s._v("单词规律"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("使用 hashmap 双射实现一一对应，这里单词模式匹配必须是一个字母匹配一个字符串，二者一一对应，不能"),n("code",[s._v("[a, nmsl], [b, nmsl]")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        map<char, string> chToStr;\n        map<string, char> strToCh;\n        int n = s.length();\n        int index = 0;\n        for(int i = 0; i < n; i++){\n            int j = i+1;\n            char cur = pattern[index];\n            while(j < n && s[j] != ' '){\n                j++;\n            }\n            string temp = s.substr(i, j-i);\n            if(strToCh.count(temp) && strToCh[temp] != cur){\n                return false;\n            }\n            if(chToStr.count(cur) && chToStr[cur] != temp){\n                return false;\n            }\n            chToStr[cur] = temp;\n            strToCh[temp] = cur;\n            index++;\n            i = j;\n        }\n        if(index != pattern.length()){\n            return false;\n        }\n        return true;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("blockquote",[n("p",[s._v("字符串哈希")])]),s._v(" "),n("h3",{attrs:{id:"根据字符出现频率排序"}},[s._v("根据字符出现频率排序")]),s._v(" "),n("p",[s._v("力扣 451："),n("a",{attrs:{href:"https://leetcode.cn/problems/sort-characters-by-frequency/",target:"_blank",rel:"noopener noreferrer"}},[s._v("根据字符出现频率排序"),n("OutboundLink")],1)]),s._v(" "),n("ul",[n("li",[s._v("排序 pair 数组，使用 lambda 表达式")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class Solution {\npublic:\n    string frequencySort(string s) {\n        map<char, int> m;\n        for(int i = 0; i < s.size(); i++){\n            m[s[i]]++;\n        }\n        vector<pair<char,int>> v;\n        for(auto& it: m){\n            v.push_back(pair<char, int> (it.first, it.second));\n        }\n        \n        // lambda 函数作为参数传入\n        sort(v.begin(), v.end(), [](pair<char,int> p1, pair<char,int> p2){\n            return p1.second > p2.second;\n        });\n        \n        string res = "";\n        for(int i = 0; i < v.size(); i++){\n            for(int j = 0; j < v[i].second; j++){\n                res += v[i].first;\n            }\n        }\n        return res;\n    }\n};\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("blockquote",[n("p",[s._v("链表哈希")])]),s._v(" "),n("h3",{attrs:{id:"环形链表-ii"}},[s._v("环形链表 II")]),s._v(" "),n("p",[s._v("力扣 142："),n("a",{attrs:{href:"https://leetcode.cn/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"}},[s._v("环形链表 II"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("返回链表中产生环的首个节点")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n       set<ListNode*> s;\n       while(head){\n           if(s.count(head)){\n               return head;\n           }\n           s.insert(head);\n           head = head->next;\n       } \n       return NULL;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("blockquote",[n("p",[s._v("图哈希")])]),s._v(" "),n("h3",{attrs:{id:"找到小镇的法官"}},[s._v("找到小镇的法官")]),s._v(" "),n("p",[s._v("力扣 997："),n("a",{attrs:{href:"https://leetcode.cn/problems/find-the-town-judge/",target:"_blank",rel:"noopener noreferrer"}},[s._v("找到小镇的法官"),n("OutboundLink")],1)]),s._v(" "),n("ul",[n("li",[s._v("使用哈希集合、哈希表统计有向图信息")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int findJudge(int n, vector<vector<int>>& trust) {\n        set<int> s;\n        map<int, int> m;\n        for(int i = 0; i < trust.size(); i++){\n            if(!s.count(trust[i][0])) { s.insert(trust[i][0]); }\n            m[trust[i][1]]++;\n        }\n        for(int i = 1; i <= n; i++){\n            if(!s.count(i)){\n                if(m[i]==n-1){\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"可以到达所有点的最少点数目"}},[s._v("可以到达所有点的最少点数目")]),s._v(" "),n("p",[s._v("力扣 1557："),n("a",{attrs:{href:"https://leetcode.cn/problems/minimum-number-of-vertices-to-reach-all-nodes/",target:"_blank",rel:"noopener noreferrer"}},[s._v("以到达所有点的最少点数目"),n("OutboundLink")],1)]),s._v(" "),n("ul",[n("li",[s._v("返回最小的点集，通过该点集可以遍历图中所有节点")]),s._v(" "),n("li",[s._v("即找入度为 0 的节点的集合")])]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    vector<int> findSmallestSetOfVertices(int n, vector<vector<int>>& edges) {\n        set<int> s;\n        for(auto& edge: edges){\n            s.insert(edge[1]);\n        }\n        vector<int> res;\n        for(int i = 0; i < n; i++){\n            if(!s.count(i)){\n                res.push_back(i);\n            }\n        }\n        return res;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"直线上最多的点数"}},[s._v("直线上最多的点数")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.cn/problems/max-points-on-a-line/",target:"_blank",rel:"noopener noreferrer"}},[s._v("直线上最多的点数"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"位运算"}},[s._v("位运算")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.cn/problems/bitwise-and-of-numbers-range/",target:"_blank",rel:"noopener noreferrer"}},[s._v("数字范围按位与"),n("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);