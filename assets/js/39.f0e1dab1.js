(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1119:function(s,t,a){"use strict";a.r(t);var i=a(3),m=Object(i.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"传输层功能"}},[s._v("传输层功能")]),s._v(" "),t("p",[s._v("传输层只在资源子网，即互联网的边缘部分存在，核心部分的通讯只依靠于下三层网络协议，下三层的传输在前面的总结中已经说的很清楚了，已经完全支持数据在网络之间的定向传输（之事不可靠）")]),s._v(" "),t("h2",{attrs:{id:"udp"}},[s._v("UDP")]),s._v(" "),t("p",[s._v("在数据部分前添加首部 8B")]),s._v(" "),t("img",{attrs:{src:a(409)}}),s._v(" "),t("p",[s._v("在 IP 分组的基础上加入端口功能，将连接的主体由主机细化到进程，注意这里的虽然是在“基础上”，但其功能的实现在数据报的“内部”，即 IP 分组拆开后，识别到 UDP 首部，才可实现这里的分用功能")]),s._v(" "),t("p",[s._v("注意：实现分用的是目的端口，实现复用的是源端口")]),s._v(" "),t("h2",{attrs:{id:"tcp"}},[s._v("TCP")]),s._v(" "),t("h3",{attrs:{id:"首部格式和功能"}},[s._v("首部格式和功能")]),s._v(" "),t("p",[s._v("首部长度和 IP 分组的长度设计完全一致，首部以 4B 为单位计量，总长度按字节为单位")]),s._v(" "),t("ul",[t("li",[s._v("固定长度 20B")]),s._v(" "),t("li",[s._v("可变长度 0-40B")])]),s._v(" "),t("p",[s._v("也就是说 TCP 报文和 IP 分组的首部长度一定在 20-60B 之间，整个 TCP 数据报的最大长度为 65535B（IP 分组同理）")]),s._v(" "),t("p",[s._v("TCP 提供可靠的全双工信道")]),s._v(" "),t("ul",[t("li",[s._v("可靠指无差错、不丢失、不重复且有序：通过序号、确认和重传实现")]),s._v(" "),t("li",[s._v("全双工信道其实可以理解为两条信道，这在释放连接的时候显得十分明显，即发送端发送一个 FIN 只代表自身不发送（但可接收），只有当两端均发送了 FIN 且被确认后，这条全双工信道才被销毁")])]),s._v(" "),t("p",[s._v("MSS（Max Segment Size）：指一个数据报的最大的总长度")]),s._v(" "),t("p",[s._v("RTT（Round Trip Time）：指一次发送和一次确认的时间，即数据报的一次往返时间")]),s._v(" "),t("p",[s._v("TCP 重要的首部字段")]),s._v(" "),t("ul",[t("li",[s._v("序号：表示当前传输的 TCP 报文数据部分的字节起始序号")]),s._v(" "),t("li",[s._v("确认号（ack）：表示期望收到的下一个数据字节序号")]),s._v(" "),t("li",[s._v("确认位（ACK）：标志确认号的有效，当 ACK = 0 时，确认号无效")]),s._v(" "),t("li",[s._v("终止位（FIN）：用以终止连接，表示当前端口停止发送数据")]),s._v(" "),t("li",[s._v("同步位（SYN）：当连接愿意建立后 SYN 始终为 1，只有 SYN = 1 时数据才能被正常传输")]),s._v(" "),t("li",[s._v("窗口：指明当前端的接收窗口大小，参与限制发送窗口的大小（流量控制）")])]),s._v(" "),t("h3",{attrs:{id:"连接的建立和释放"}},[s._v("连接的建立和释放")]),s._v(" "),t("p",[s._v("首部中，序号和确认号，确认位、终止位和开始位，一起合作控制 TCP 连接的建立和释放")]),s._v(" "),t("ul",[t("li",[s._v("确认号传输的是序号，指明下一个想要收到的数据报文的起始序号")])]),s._v(" "),t("p",[s._v("三次握手")]),s._v(" "),t("img",{attrs:{src:a(410)}}),s._v(" "),t("p",[s._v("注意每个站点的 seq 都是独立的，即互不影响，在建立连接时，二者开始的 seq 几乎也是随意取值，只是注意确认报文的确认号一定和上一条收到的报文的序号以及有效数据长度有关")]),s._v(" "),t("p",[s._v("这里两个 seq 实际上可以视作两条信道的有序保持者，seq1 保证 A 到 B 的数据报有序，seq2 保证 B 到 A 的数据报有序")]),s._v(" "),t("ul",[t("li",[s._v("这里的时间名称记一下，有个印象，考过")])]),s._v(" "),t("p",[s._v("四次挥手：双方主动告知对方自己不再发送数据，当双方均确认对方不再发送数据后，连接断开")]),s._v(" "),t("img",{attrs:{src:a(411)}}),s._v(" "),t("p",[s._v("同样的，这里的时间段名称也留个印象，主动关闭的主机发送最后一个确认信号后将等待两个 MSL 后才关闭")]),s._v(" "),t("p",[s._v("MSL（Max Segment Life）：数据报最大的存活时间")]),s._v(" "),t("img",{attrs:{src:a(412)}}),s._v(" "),t("h3",{attrs:{id:"流量控制"}},[s._v("流量控制")]),s._v(" "),t("p",[s._v("流量控制和拥塞控制的区别，流量控制是针对端和端来说的，由接收方单纯的控制发送方，并不会影响到其他的端口；而拥塞控制是针对整个网络而言，即出现拥塞不单单是当前 TCP 连接的两端的问题，也就是说，当网络出现拥塞，每个连接都将无法幸免")]),s._v(" "),t("p",[s._v("其控制的原理基本相同：通过限制发送方的流量，降低信道（网络）拥塞程度，流量控制把发送方窗口锁死，而拥塞控制动态的调整发送窗口大小")]),s._v(" "),t("h3",{attrs:{id:"拥塞控制"}},[s._v("拥塞控制")]),s._v(" "),t("blockquote",[t("p",[s._v("慢开始，拥塞避免 —— 基于冗余 ACK ——> 快重传，快恢复")])]),s._v(" "),t("p",[s._v("首先要明确的是\n"),t("section",[t("eqn",[t("span",{staticClass:"katex-display"},[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[t("semantics",[t("mrow",[t("mtext",[s._v("发送窗口")]),t("mo",[s._v("=")]),t("mi",[s._v("m")]),t("mi",[s._v("i")]),t("mi",[s._v("n")]),t("mo",{attrs:{stretchy:"false"}},[s._v("{")]),t("mtext",[s._v("接收窗口")]),t("mo",{attrs:{separator:"true"}},[s._v(",")]),t("mtext"),t("mtext",[s._v("拥塞窗口")]),t("mo",{attrs:{stretchy:"false"}},[s._v("}")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n发送窗口 = min\\{接收窗口,\\,拥塞窗口\\}\n")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6833em"}}),t("span",{staticClass:"mord cjk_fallback"},[s._v("发送窗口")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("=")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("min")]),t("span",{staticClass:"mopen"},[s._v("{")]),t("span",{staticClass:"mord cjk_fallback"},[s._v("接收窗口")]),t("span",{staticClass:"mpunct"},[s._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord cjk_fallback"},[s._v("拥塞窗口")]),t("span",{staticClass:"mclose"},[s._v("}")])])])])])])],1),s._v("\ncwnd（Congestion Window）：拥塞窗口")]),s._v(" "),t("p",[s._v("慢开始：慢指的是 cwnd 大小从 1 开始，但他是指数增长的，每经过一轮 RTT，他的窗口大小将乘以 2（没经过一个数据报的确认，窗口大小 +1，每个 RTT 将有 cwnd 个数据报被确认）")]),s._v(" "),t("p",[s._v("拥塞避免：维护一个阈值 ssthresh（手动初始化），当 cwnd 达到 ssthresh 后，每轮 RTT 后，cwnd 增加一个（在时间轴上线性增长）")]),s._v(" "),t("p",[s._v("当碰到拥塞时（确认报超时），将 ssthresh 降为 cwnd 的二分之一，同时将 cwnd 置为，开始慢开始算法")]),s._v(" "),t("ul",[t("li",[s._v("会碰到这样的情况，如"),t("code",[s._v("ssthresh = 6, cwnd = 4")]),s._v("，根据慢开始算法，下一轮 RTT 时，cwnd 应乘以 2 为 8，但这里统一认为 cwnd 始终不会超过 ssthresh，故下一轮 cwnd = 6，然后开始执行拥塞避免算法")])]),s._v(" "),t("p",[s._v("冗余确认：当发送方连续收到三个确认号一样的数据报时，即认为发生了冗余确认，我们认为此时网络发生了拥塞或传输出现了错误")]),s._v(" "),t("p",[s._v("快重传：当发生冗余确认后，无需等待超时，直接重发三个冗余确认中携带的确认号序号的数据报文，从这个中断点开始有序传输")]),s._v(" "),t("p",[s._v("快恢复：在拥塞避免算法遇到拥塞时，有\n"),t("section",[t("eqn",[t("span",{staticClass:"katex-display"},[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[t("semantics",[t("mrow",[t("mi",[s._v("s")]),t("mi",[s._v("s")]),t("mi",[s._v("t")]),t("mi",[s._v("h")]),t("mi",[s._v("r")]),t("mi",[s._v("e")]),t("mi",[s._v("s")]),t("mi",[s._v("h")]),t("mo",[s._v("=")]),t("mfrac",[t("mrow",[t("mi",[s._v("c")]),t("mi",[s._v("w")]),t("mi",[s._v("n")]),t("mi",[s._v("d")])],1),t("mn",[s._v("2")])],1),t("mo",{attrs:{separator:"true"}},[s._v(",")]),t("mi",[s._v("c")]),t("mi",[s._v("w")]),t("mi",[s._v("n")]),t("mi",[s._v("d")]),t("mo",[s._v("=")]),t("mn",[s._v("1")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nssthresh = \\frac{cwnd}{2}, cwnd = 1\n")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6944em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("ss")]),t("span",{staticClass:"mord mathnormal"},[s._v("t")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mord mathnormal"},[s._v("res")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("=")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"2.0574em","vertical-align":"-0.686em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mopen nulldelimiter"}),t("span",{staticClass:"mfrac"},[t("span",{staticClass:"vlist-t vlist-t2"},[t("span",{staticClass:"vlist-r"},[t("span",{staticClass:"vlist",staticStyle:{height:"1.3714em"}},[t("span",{staticStyle:{top:"-2.314em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mord"},[s._v("2")])])]),t("span",{staticStyle:{top:"-3.23em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),t("span",{staticStyle:{top:"-3.677em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mord mathnormal"},[s._v("c")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[s._v("w")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("d")])])])]),t("span",{staticClass:"vlist-s"},[s._v("​")])]),t("span",{staticClass:"vlist-r"},[t("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[t("span")])])])]),t("span",{staticClass:"mclose nulldelimiter"})]),t("span",{staticClass:"mpunct"},[s._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("c")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[s._v("w")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("d")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("=")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),t("span",{staticClass:"mord"},[s._v("1")])])])])])])],1),s._v("\n在采用快恢复时，转换变成了这样\n"),t("section",[t("eqn",[t("span",{staticClass:"katex-display"},[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[t("semantics",[t("mrow",[t("mi",[s._v("s")]),t("mi",[s._v("s")]),t("mi",[s._v("t")]),t("mi",[s._v("h")]),t("mi",[s._v("r")]),t("mi",[s._v("e")]),t("mi",[s._v("s")]),t("mi",[s._v("h")]),t("mo",[s._v("=")]),t("mfrac",[t("mrow",[t("mi",[s._v("c")]),t("mi",[s._v("w")]),t("mi",[s._v("n")]),t("mi",[s._v("d")])],1),t("mn",[s._v("2")])],1),t("mo",{attrs:{separator:"true"}},[s._v(",")]),t("mi",[s._v("c")]),t("mi",[s._v("w")]),t("mi",[s._v("n")]),t("mi",[s._v("d")]),t("mo",[s._v("=")]),t("mi",[s._v("s")]),t("mi",[s._v("s")]),t("mi",[s._v("t")]),t("mi",[s._v("h")]),t("mi",[s._v("r")]),t("mi",[s._v("e")]),t("mi",[s._v("s")]),t("mi",[s._v("h")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\nssthresh = \\frac{cwnd}{2}, cwnd = ssthresh\n")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6944em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("ss")]),t("span",{staticClass:"mord mathnormal"},[s._v("t")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mord mathnormal"},[s._v("res")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("=")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"2.0574em","vertical-align":"-0.686em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mopen nulldelimiter"}),t("span",{staticClass:"mfrac"},[t("span",{staticClass:"vlist-t vlist-t2"},[t("span",{staticClass:"vlist-r"},[t("span",{staticClass:"vlist",staticStyle:{height:"1.3714em"}},[t("span",{staticStyle:{top:"-2.314em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mord"},[s._v("2")])])]),t("span",{staticStyle:{top:"-3.23em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),t("span",{staticStyle:{top:"-3.677em"}},[t("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),t("span",{staticClass:"mord"},[t("span",{staticClass:"mord mathnormal"},[s._v("c")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[s._v("w")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("d")])])])]),t("span",{staticClass:"vlist-s"},[s._v("​")])]),t("span",{staticClass:"vlist-r"},[t("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[t("span")])])])]),t("span",{staticClass:"mclose nulldelimiter"})]),t("span",{staticClass:"mpunct"},[s._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("c")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02691em"}},[s._v("w")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("d")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("=")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6944em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("ss")]),t("span",{staticClass:"mord mathnormal"},[s._v("t")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mord mathnormal"},[s._v("res")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")])])])])])])],1),s._v("\n然后开始继续执行拥塞避免算法，cwnd 随时间线性增加")]),s._v(" "),t("p",[s._v("这里有一个确认数据报延迟的问题")]),s._v(" "),t("img",{attrs:{src:a(413)}}),s._v(" "),t("p",[s._v("可以轻松得到当前发送窗口大小为 2000B，但注意此时发送端只收到了一个确认段，也就是说有 1000B 的数据还未确认，故此时只能发送 1000B 的数据，选 A")]),s._v(" "),t("img",{attrs:{src:a(414)}}),s._v(" "),t("img",{attrs:{src:a(415)}}),s._v(" "),t("p",[s._v("同样的，此时发送窗口为接收窗口 500B（拥塞窗口未知，只能这么认为），只收到了 501 的确认报，没收到刚刚发出去的"),t("code",[s._v("seq-501, length=200B")]),s._v("的确认报，所以现在只能发送 500-200=300B 的数据报，并且是接着 500+200=700 的序号发送，选 C")]),s._v(" "),t("p",[s._v("有时，窗口大小 cwnd 按照字节来计量，此时需要直到 MMS 大小，认为窗口中最多含有 cwnd / MMS 个数据报")])])}),[],!1,null,null,null);t.default=m.exports},409:function(s,t,a){s.exports=a.p+"assets/img/image-20230703184754458.7a457d20.png"},410:function(s,t,a){s.exports=a.p+"assets/img/image-20230703190237078.e81e15e0.png"},411:function(s,t,a){s.exports=a.p+"assets/img/image-20230703190443358.08f0d9fd.png"},412:function(s,t,a){s.exports=a.p+"assets/img/image-20230703192534390.93c4882d.png"},413:function(s,t,a){s.exports=a.p+"assets/img/image-20230703192728759.88d19e06.png"},414:function(s,t,a){s.exports=a.p+"assets/img/image-20230703192851201.af971260.png"},415:function(s,t,a){s.exports=a.p+"assets/img/image-20230703192905323.2e193284.png"}}]);