(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{1328:function(s,n,a){"use strict";a.r(n);var t=a(3),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("来自 "),n("a",{attrs:{href:"https://github.com/fengdu78/Data-Science-Notes",target:"_blank",rel:"noopener noreferrer"}},[s._v("fengdu78"),n("OutboundLink")],1),s._v(" 的机器学习教程，一百道 Python 基础题目，快速入门 Python")])]),s._v(" "),n("h2",{attrs:{id:"day1"}},[s._v("Day1")]),s._v(" "),n("h3",{attrs:{id:"输出整除数"}},[s._v("输出整除数")]),s._v(" "),n("p",[s._v("输出2000-3201的能被7整除不被5整除的数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# for循环\nfor i in range(2000, 3201):\n    if i%7!=0 and i%5!=0:\n        print(i, end=',')\nprint()\n\n# 构造数组，打印数组\narr = [i for i in range(2000, 3201) if i%7==0 and i%5!=0] # arr是构造的一个数组，当然也可以用()元组\nprint(*arr, sep=',') # 输出数组元素，等价于for i in list: print(i, end=',')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"输出阶乘"}},[s._v("输出阶乘")]),s._v(" "),n("p",[s._v("输出输入数字的阶乘")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# for循环\nn = int(input())\nres = 1\nfor i in range(1, n+1):\n    res *= i\nprint(res)\n\n# 递归\nn = int(input())\ndef rec(x):\n    # if x <= 1:\n    #     return 1\n    # return x*rec(x-1)\n    # 这个if/else可以缩写成一行\n    return 1 if x<=1 else x*rec(x-1)\nprint(rec(n))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"构造平方字典"}},[s._v("构造平方字典")]),s._v(" "),n("p",[s._v("构造一个由按1递增的由自身和自身平方构成的字典")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# for循环\ndict={}\nn = int(input())\nfor i in range(1,n+1):\n    dict[i] = i*i\nprint(dict)\n\n# 构造器\nn = int(input())\ndict = {i:i*i for i in range(1, n+1)}\nprint(dict)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"day2"}},[s._v("Day2")]),s._v(" "),n("h3",{attrs:{id:"数组转元组"}},[s._v("数组转元组")]),s._v(" "),n("p",[s._v("input()函数构造数组，数组转化称元组"),n("code",[s._v("[]")]),s._v("（只读数组"),n("code",[s._v("()")]),s._v("）")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("l = input().split(',') # 通过,分割输入字符串为数组\nt = tuple(l) # 将数组l转化成元组t，同理可以l=list(t)\nprint(l)\nprint(t)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("同理有函数"),n("code",[s._v("list")])])]),s._v(" "),n("h3",{attrs:{id:"类内置set-get函数"}},[s._v("类内置set/get函数")]),s._v(" "),n("p",[s._v("定义一个类，具有获取字符串和打印字符串的函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class IOString:\n    def __init__(self):\n        pass\n    def get_string(self):\n        self.str = input()\n    def print_string(self):\n        print(self.str)\nios = IOString()\nios.get_string()\nios.print_string()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("pass的作用：占位，使代码完整，无逻辑任何功能，当尚未想好怎么写的时候可以用"),n("code",[s._v("pass")]),s._v("代替")])]),s._v(" "),n("h3",{attrs:{id:"方程求解"}},[s._v("方程求解")]),s._v(" "),n("p",[s._v("输入数字字符串，数字间用逗号隔开，输出函数计算结果，结果同样是字符串，答案之间用逗号隔开")]),s._v(" "),n("p",[s._v("函数为\n"),n("section",[n("eqn",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"}},[n("semantics",[n("mrow",[n("msqrt",[n("mfrac",[n("mrow",[n("mn",[s._v("2")]),n("mo",[s._v("×")]),n("mi",[s._v("C")]),n("mo",[s._v("×")]),n("mi",[s._v("D")])],1),n("mi",[s._v("H")])],1)],1),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("mspace",{attrs:{width:"1em"}}),n("mi",[s._v("C")]),n("mo",[s._v("=")]),n("mn",[s._v("50")]),n("mo",{attrs:{separator:"true"}},[s._v(",")]),n("mi",[s._v("H")]),n("mo",[s._v("=")]),n("mn",[s._v("30")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\n\\sqrt{\\frac{2\\times C\\times D}{H}},\\quad C=50,H=30\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"2.44em","vertical-align":"-0.769em"}}),n("span",{staticClass:"mord sqrt"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"1.671em"}},[n("span",{staticClass:"svg-align",staticStyle:{top:"-4.4em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"4.4em"}}),n("span",{staticClass:"mord",staticStyle:{"padding-left":"1em"}},[n("span",{staticClass:"mord"},[n("span",{staticClass:"mopen nulldelimiter"}),n("span",{staticClass:"mfrac"},[n("span",{staticClass:"vlist-t vlist-t2"},[n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"1.3603em"}},[n("span",{staticStyle:{top:"-2.314em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.08125em"}},[s._v("H")])])]),n("span",{staticStyle:{top:"-3.23em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"frac-line",staticStyle:{"border-bottom-width":"0.04em"}})]),n("span",{staticStyle:{top:"-3.677em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"3em"}}),n("span",{staticClass:"mord"},[n("span",{staticClass:"mord"},[s._v("2")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mbin"},[s._v("×")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222em"}}),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[s._v("D")])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.686em"}},[n("span")])])])]),n("span",{staticClass:"mclose nulldelimiter"})])])]),n("span",{staticStyle:{top:"-3.631em"}},[n("span",{staticClass:"pstrut",staticStyle:{height:"4.4em"}}),n("span",{staticClass:"hide-tail",staticStyle:{"min-width":"1.02em",height:"2.48em"}},[n("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"2.48em",viewBox:"0 0 400000 2592",preserveAspectRatio:"xMinYMin slice"}},[n("path",{attrs:{d:"M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z"}})])])])]),n("span",{staticClass:"vlist-s"},[s._v("​")])]),n("span",{staticClass:"vlist-r"},[n("span",{staticClass:"vlist",staticStyle:{height:"0.769em"}},[n("span")])])])]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"1em"}}),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.07153em"}},[s._v("C")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.8778em","vertical-align":"-0.1944em"}}),n("span",{staticClass:"mord"},[s._v("50")]),n("span",{staticClass:"mpunct"},[s._v(",")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),n("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.08125em"}},[s._v("H")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),n("span",{staticClass:"mrel"},[s._v("=")]),n("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),n("span",{staticClass:"base"},[n("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),n("span",{staticClass:"mord"},[s._v("30")])])])])])])],1)]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 引入库函数'开根'\nfrom math import sqrt\n\n# 定义常数\nC,H = 50,30\n\n# 定义计算函数\ndef cal(num):\n    return sqrt((2*num*C)/H)\n\nD = input().split(',') # 获取输入字符串\nD = [int(i) for i in D] # 将输入转为整数\nD = [cal(i) for i in D] # 计算结果并存入数组D\nD = [round(i) for i in D] # 小数取整\nD = [str(i) for i in D] # 转为字符串数组\n\n# join函数，将元组、数组通过某个连接符转化为字符串，如','.join(['ds','das']) = 'ds,das'\nprint(\",\".join(D))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("ul",[n("li",[n("code",[s._v("f = [i*2 for i in l if i > 0]")]),s._v("这行代码的意思为提取数组"),n("code",[s._v("l")]),s._v("中大于"),n("code",[s._v("0")]),s._v("的元素，并乘以2，构成一个新的数组，记为"),n("code",[s._v("f")])])]),s._v(" "),n("p",[s._v("上述操作可以集中为一句：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("D = input().split(',') # 获取输入字符串\nD = [str(round(cal(int(i)))) for i in D] # 完成所有计算后转为字符串数组\nprint(\",\".join(D)) # 将字符串数组合成字符串输出\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("更高级的写法：")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('from math import *  # 引入math所有函数\nC, H = 50, 30\n\ndef calc(D):\n    D = int(D)\n    return str(int(sqrt((2 * C * D) / H)))\n\nD = input().split(",")\nD = list(map(calc, D))  # applying calc function on D and storing as a list\nprint(",".join(D))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("map函数：第一个参数为函数，第二个参数为迭代器（数组、元组），这个函数将应用于迭代器中每个元素并返回作用后的迭代器")])]),s._v(" "),n("h3",{attrs:{id:"矩阵相乘"}},[s._v("矩阵相乘")]),s._v(" "),n("p",[s._v("输入两个数字"),n("code",[s._v("x,y")]),s._v("作为上界，下界为"),n("code",[s._v("0")]),s._v("，输出二者乘法组成二维表，如"),n("code",[s._v("x=2,y=3")])]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("x")]),s._v(" "),n("th",[s._v("y")]),s._v(" "),n("th",[s._v("x*y")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("0")]),s._v(" "),n("td",[s._v("[0,1,2]")]),s._v(" "),n("td",[s._v("[0,0,0]")])]),s._v(" "),n("tr",[n("td",[s._v("1")]),s._v(" "),n("td",[s._v("[0,1,2]")]),s._v(" "),n("td",[s._v("[0,1,2]")])])])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("x, y = map(int, input().split(','))\n\ntable = []\nfor i in range(0,x):\n    temp = []\n    for j in range(0,y):\n        temp.append(i*j)\n    table.append(temp)\nprint(table)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("同样使用了"),n("code",[s._v("map(func, arr)")]),s._v("函数，一行解决输入数字")])]),s._v(" "),n("h3",{attrs:{id:"字典序排序"}},[s._v("字典序排序")]),s._v(" "),n("p",[s._v("将用逗号分割的输入元素按字典序排序输出")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr = input().split(',')\narr.sort()\nprint(','.join(arr))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"小写输入大写输出"}},[s._v("小写输入大写输出")]),s._v(" "),n("p",[s._v("小写输入多个字符串，用换行分隔各个字符串，大写输出")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("arr = []\n\nwhile True:\n    line = input()\n    if len(line) == 0:\n        break\n    arr.append(line.upper())\n\nfor line in arr:\n    print(line)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("input()函数接收空值，即回车时，可以视为返回一个"),n("code",[s._v("False")])]),s._v(" "),n("li",[s._v("字符串的"),n("code",[s._v("upper()")]),s._v("函数：将小写字母转为大写；同理有"),n("code",[s._v("lower")]),s._v("函数将大写转小写")])]),s._v(" "),n("p",[s._v("通过yield返回")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def user_input():\n    while True:\n        s = input()\n        if not s:\n            return\n        yield s\n\nfor line in map(str.upper, user_input()):\n    print(line)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("yield不是阻塞的，这意味着获得值后，将新开辟一条线程立即返回，继续执行之后的代码，同时这个函数继续运行")])]),s._v(" "),n("p",[s._v("如上述代码的执行过程为")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hello\nHELLO\nworld\nWORLD\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("而非")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hello\nworld\nHELLO\nWORLD\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"day3"}},[s._v("Day3")]),s._v(" "),n("h3",{attrs:{id:"字符串删减、排序"}},[s._v("字符串删减、排序")]),s._v(" "),n("p",[s._v("输入字符串，删除出现次数多余1次的单词（即只允许每个单词出现一次），将剩余单词按字典序排序后组成新的句子打印输出")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("word = input().split(' ') # 根据空格分割单词\nfor i in word:\n    if word.count(i)>1:\n        word.remove(i)\nword.sort()\nprint(' '.join(word))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("迭代器的"),n("code",[s._v("count(i)")]),s._v("函数：返回元素"),n("code",[s._v("i")]),s._v("出现次数")]),s._v(" "),n("li",[s._v("当以空格分割时，可以省略，即"),n("code",[s._v("word.input().split()")])])]),s._v(" "),n("p",[s._v("通过构造器构造：怪怪的")]),s._v(" "),n("p",[s._v("通过set函数构造：set构造一个无序不重复的元素集，通过sorted函数按照字典序排序")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("word = sorted(list(set(input().split)))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"返回被5整除的二进制数"}},[s._v("返回被5整除的二进制数")]),s._v(" "),n("p",[s._v("给若干个二进制数，返回能被5整除的数，要先进行十进制的转换")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def cal(b):\n    total, fact = 0, 1\n    for i in b:\n        total += (ord(i)-48)*fact\n        fact *= 2\n    return total\n\narr = input().split(',')\nl = []\nfor e in arr:\n    if(cal(e)%5 == 0):\n    \tl.append(e)\nprint(','.join(l))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("code",[s._v("ord()")]),s._v("函数将字符转为相应ascii码，"),n("code",[s._v("chr()")]),s._v("将ascii码转为字符")]),s._v(" "),n("h3",{attrs:{id:"找出偶数"}},[s._v("找出偶数")]),s._v(" "),n("p",[s._v("找出1000-3001中各位均为偶数的数，并打印输出")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("ans = []\nfor i in range(1000,3002):\n    flag = True\n    for j in str(i):\n        if ord(j)%2 != 0:\n            # 不可以用continue，这里只能continue到下层内层循环\n            flag = False\n    if flag:\n        ans.append(str(i))\nprint(','.join(ans))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[n("code",[s._v("str()")]),s._v("将数据转化为字符串")]),s._v(" "),n("li",[n("code",[s._v("ord()")]),s._v("，数字的"),n("code",[s._v("ASCII码-48")]),s._v("为数字本身"),n("code",[s._v("(ascii-48)%2 = ascii%2")])])]),s._v(" "),n("h3",{attrs:{id:"统计字母和数字"}},[s._v("统计字母和数字")]),s._v(" "),n("p",[s._v("统计一个字符串中数字和字母的个数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def cal(x):\n    res = [0,0]\n    for i in x:\n        ascii = ord(i)\n        if ascii>=48 and ascii<=57:\n            res[1] += 1\n        elif (ascii>=65 and ascii<=90) or (ascii>=97 and ascii<=122):\n            res[0] += 1\n    return res\n\ns = input()\nres = cal(s)\nprint('LETTERS\\t'+str(res[0])+'\\nDIGITS\\t'+str(res[1]))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("其实可以直接比较字符的大小（也是比较的ascii码）")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('def cal(x):\n    res = [0,0]\n    for i in x:\n       if i>="0" and i<="9":\n            res[1] += 1\n        elif (i>="a" and i<="z") or (i>="A" and i<="Z"):\n            res[0] += 1\n    return res\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("也可以调用内置函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# i为某个字符\n# 判断是否是字母\ni.isalpha()\n# 判断是否是数字\ni.isnumeric()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"day4"}},[s._v("Day4")]),s._v(" "),n("h3",{attrs:{id:"统计大小写字母个数"}},[s._v("统计大小写字母个数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("word = input()\nlower, upper = 0, 0\nfor c in word:\n    if c>='a' and c<='z':\n        lower += 1\n    elif c>='A' and c<= 'Z':\n        upper += 1\nprint(\"UPPER CASE \" + str(upper) + \"\\nLOWER CASE \" + str(upper))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("或者用"),n("code",[s._v("isupper()/islower()")]),s._v("函数代替")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("for c in word:\n    lower += c.islower()\n    upper += c.isupper()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("使用"),n("code",[s._v("sum()")]),s._v("函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("upper = sum(1 for i in word if i.isupper())\nlower = sum(1 for i in word if i.islower())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"a-aa-aaa-aaaa"}},[s._v("a+aa+aaa+aaaa")]),s._v(" "),n("p",[s._v("输入一个数"),n("code",[s._v("a")]),s._v("，输出"),n("code",[s._v("a+aa+aaa+aaaa")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("a = str(input())\nres = int(a)+int(a+a)+int(a+a+a)+int(a+a+a+a)\nprint(res)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("也可以写成")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("res = int(a)+int(2*a)+int(3*a)+int(4*a)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("利用字符串加法和字符串转整数实现，当然也可以一个一个乘了加")]),s._v(" "),n("h2",{attrs:{id:"day5"}},[s._v("Day5")]),s._v(" "),n("h3",{attrs:{id:"找到奇数并平方"}},[s._v("找到奇数并平方")]),s._v(" "),n("p",[s._v("将输入的奇数的平方构成一个数组输出，输入的数字用逗号分隔")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("l = input().split(',')\nres = []\nfor i in l:\n    i = int(i)\n    if i%2 != 0:\n        res.append(str(i**2))\n        \nprint(','.join(res))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("高级的写法")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("res = [str(int(i)**2) for i in input().split(',') if int(i)%2 != 0]\nprint(','.join(res))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("要注意整型和字符串的转换")]),s._v(" "),n("ul",[n("li",[s._v("join只可以作用于字符串数组")]),s._v(" "),n("li",[s._v("乘方、取余等运算只能作用于数字型变量")])]),s._v(" "),n("h3",{attrs:{id:"记账"}},[s._v("记账")]),s._v(" "),n("p",[s._v("实现一个加减法程序，"),n("code",[s._v("D")]),s._v("代表加，"),n("code",[s._v("W")]),s._v("代表减，连续输入回车则退出程序，如")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("D 300\nW 200\n\n100\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('total = 0\nwhile True:\n    s = input().split(\' \')\n    if len(s) < 2:\n        break\n    exec, num = map(str, s)\n    if exec == "D":\n        total += int(num)\n    elif exec == "W":\n        total -= int(num)\n        \nprint(num)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("以空格作为标识分割，输入回车时，即"),n("code",[s._v("s='\\n'")]),s._v("，经分割后仍为一个字符，即"),n("code",[s._v("len(s)==1")]),s._v("，需要判断这种情况并及时退出")]),s._v(" "),n("p",[s._v("同样利用字符串分割")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('"""Solution by: leonedott"""\nlst = []\nwhile True:\n    x = input()\n    if len(x) == 0:\n        break\n    lst.append(x)\n\nbalance = 0\nfor item in lst:\n    if "D" in item:\n        balance += int(item.strip("D "))\n    if "W" in item:\n        balance -= int(item.strip("W "))\nprint(balance)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("利用构造器和"),n("code",[s._v("sum")]),s._v("函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('"""Solution by: ShalomPrinz"""\nlines = []\nwhile True:\n    loopInput = input()\n    if loopInput == "done":\n        break\n    else:\n        lines.append(loopInput)\n\nlst = list(int(i[2:]) if i[0] == "D" else -int(i[2:]) for i in lines)\nprint(sum(lst))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"day6"}},[s._v("Day6")]),s._v(" "),n("h3",{attrs:{id:"检测密码"}},[s._v("检测密码")]),s._v(" "),n("p",[s._v("判断密码是否符合要求")]),s._v(" "),n("ul",[n("li",[s._v("至少一个小写字母")]),s._v(" "),n("li",[s._v("至少一个大写字母")]),s._v(" "),n("li",[s._v("至少一个数字")]),s._v(" "),n("li",[s._v("至少有"),n("code",[s._v("'$','@','#'")]),s._v("之中一个")]),s._v(" "),n("li",[s._v("长度在"),n("code",[s._v("[6,12]")]),s._v("之间")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def check(pwd):\n    length = len(pwd)\n    if length<6 or length>12:\n        return False\n    flag = [False, False, False]\n    for i in pwd:\n        if i.islower():\n            flag[0] = True\n        if i.isupper():\n            flag[1] = True\n        if i=='$' or i=='#' or i=='@':\n            flag[2] = True\n    for f in flag:\n        if f is False:\n            return False\n    return True\n\nlegal = []\npassword = input().split(',')\nfor pwd in password:\n    if check(pwd):\n        legal.append(pwd)\nprint(','.join(legal))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("h3",{attrs:{id:"排序结构体"}},[s._v("排序结构体")]),s._v(" "),n("p",[s._v("输入若干学生（姓名、年龄、成绩），按"),n("code",[s._v("姓名>年龄>成绩")]),s._v("的顺序进行排序并输出，即先比较名字的字典序，名字一样再比较年龄，年龄也一样则比较成绩")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("l = []\nwhile True:\n    s = input().split(',')\n    if len(s)<2:\n        break\n    l.append(tuple(s))\nsorted(l,  key=lambda x:(x[0],x[1],x[2]), reverse=False)\nprint(l)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[n("code",[s._v("lambda")]),s._v("函数：匿名函数，冒号前为入参，后为出参")]),s._v(" "),n("li",[n("code",[s._v("sorted(iterable, cmp=None, key=None, reverse=False)")])])]),s._v(" "),n("h2",{attrs:{id:"day7"}},[s._v("Day7")]),s._v(" "),n("h3",{attrs:{id:"_7的倍数"}},[s._v("7的倍数")]),s._v(" "),n("p",[s._v("输出"),n("code",[s._v("n")]),s._v("以内为7的倍数的整数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class MyGen:\n    def by_seven(self, n):\n        for i in range(0, int(n/7)+1):\n            yield i*7\n\nn = int(input())\nfor i in MyGen().by_seven(n):\n    print(i)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"计算距原点距离"}},[s._v("计算距原点距离")]),s._v(" "),n("p",[s._v("在"),n("code",[s._v("x-y")]),s._v("坐标系中移动，"),n("code",[s._v("DOWN 5")]),s._v("表示向下走五格，以此类推，求出移动后和原点距离（取整）")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('from math import sqrt\n\nx, y = 0, 0\nwhile True:\n    command = input().split(\' \')\n    if len(command)<2:\n        break\n    if(command[0] == "UP"):\n        y += int(command[1])\n    if(command[0] == "DOWN"):\n        y -= int(command[1])\n    if(command[0] == "LEFT"):\n        x -= int(command[1])\n    if(command[0] == "RIGHT"):\n        x += int(command[1])\n\ndistance = int(sqrt(x**2+y**2))\nprint(distance)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h2",{attrs:{id:"day8"}},[s._v("Day8")]),s._v(" "),n("h3",{attrs:{id:"统计单词出现次数"}},[s._v("统计单词出现次数")]),s._v(" "),n("p",[s._v("构造一个单词的"),n("code",[s._v("set")]),s._v("（不重复），再在原句子中用"),n("code",[s._v("count")]),s._v("函数数出数量")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sentence = input().split(' ')\nword = set(sentence)\nfor i in word:\n    print(\"{0}:{1}\".format(i, sentence.count(i)))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("直接构造一个字典"),n("code",[s._v("dict")]),s._v("，但仍用"),n("code",[s._v("count")]),s._v("函数计数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sentence = input().split(' ')\ndict = {}\nfor word in sentence:\n    dict.setdefault(word, sentence.count(word))\ndict = sorted(dict.items())\nfor i in dict:\n    print(\"{0}:{1}\".format(i[0],i[1]))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"将数平方"}},[s._v("将数平方")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("n = int(input())\nprint(n**2)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"内置文档函数"}},[s._v("内置文档函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('print(str.__doc__)\nprint(sorted.__doc__)\n\ndef pow(n, p):\n    """\n    param n: This is any integer number\n    param p: This is power over n\n    return:  n to the power p = n^p\n    """\n    return n ** p\n\n\nprint(pow(3, 4))\nprint(pow.__doc__)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"实例和类的属性"}},[s._v("实例和类的属性")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class Person:\n    name = "Person"\n    \n    def __init__(self, name=None):\n        self.name = name\n\nm = Person("NorthBoat")\nprint(Person.name + " name is " + m.name)\nm.name = "HAHAHA"\nprint(Person.name + " name is " + m.name)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("类的属性"),n("code",[s._v("Person.name")]),s._v("是静态的，而每个实例的"),n("code",[s._v("name")]),s._v("属性是动态的")])])}),[],!1,null,null,null);n.default=e.exports}}]);