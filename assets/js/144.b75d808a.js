(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{1505:function(s,n,a){"use strict";a.r(n);var e=a(3),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"day9"}},[s._v("Day9")]),s._v(" "),n("blockquote",[n("p",[s._v("掌握"),n("code",[s._v("lambda")]),s._v("函数用法")]),s._v(" "),n("p",[s._v("这个函数定义的方式有点像"),n("code",[s._v("javascript")])])]),s._v(" "),n("h3",{attrs:{id:"加法函数"}},[s._v("加法函数")]),s._v(" "),n("p",[s._v("用"),n("code",[s._v("lambda")]),s._v("函数实现")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sum = lambda a,b:a+b\nprint(sum(1,2))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"整型转字符串函数"}},[s._v("整型转字符串函数")]),s._v(" "),n("p",[s._v("用"),n("code",[s._v("lambda")]),s._v("函数实现")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("tran = lambda n:str(n)\ns = tran(10)\nprint(s)\nprint(type(s)) # str\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"字符串加法函数"}},[s._v("字符串加法函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('strsum = lambda s1,s2:int(s1)+int(s2)\nn = strsum("123","321")\nprint(n)\nprint(type(n)) # int\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"连接字符串函数"}},[s._v("连接字符串函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('concat = lambda s1,s2:s1+s2\nprint(concat("20","22"))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"打印较长的字符串"}},[s._v("打印较长的字符串")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def printmax(s1, s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    if len1>len2:\n        print(s1)\n    elif len2>len1:\n        print(s2)\n\telse:\n        print(s1)\n        print(s2)\n\ns1, s2 = input().split()\nprintmax(s1, s2)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("高级的"),n("code",[s._v("lambda")]),s._v("函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# by: yuan1z\nfunc = (\n    lambda a, b: print(max((a, b), key=len))\n    if len(a) != len(b)\n    else print(a + "\\n" + b)\n)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"day10"}},[s._v("Day10")]),s._v(" "),n("h3",{attrs:{id:"构建并打印字典"}},[s._v("构建并打印字典")]),s._v(" "),n("p",[s._v("构建并打印整个字典")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def buildDict():\n    dict = {i:i**2 for i in range(1,21)}\n    print(dict)\nbuildDict()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("构建并打印字典键")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def buildDict():\n    dict = {i:i**2 for i in range(1,21)}\n    print(dict.keys())\nbuildDict()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"构建并截取打印数组"}},[s._v("构建并截取打印数组")]),s._v(" "),n("p",[s._v("构建并打印整个数组")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def buildList():\n    l = [i**2 for i in range(1,21)]\n    print(l)\nbuildList()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("构建并打印数组前五元素")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def printFive():\n    l = [i**2 for i in range(1,21)]\n    for i in range(5):\n        print(l[i]) # 通过下标遍历数组\nprintFive()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("构建并打印数组后五元素")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def printReverseFive():\n    l = [i**2 for i in range(1,21)]\n    for i in range(len(l)-1, len(l)-6, -1):\n        print(l[i])\nprintReverseFive()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[n("code",[s._v("range()")]),s._v("函数其实有三个参数，第一个为起始点，第二个为终止点，第三个为步长（默认为1），步长即每次"),n("code",[s._v("loop")]),s._v("后加的数，-1即为倒序")])]),s._v(" "),n("p",[s._v("构建并打印除开前五元素的其他元素")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def printReverseFive():\n    l = [i**2 for i in range(1,21)]\n    for i in range(5, len(l)):\n        print(l[i])\nprintReverseFive()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"构建并打印元组"}},[s._v("构建并打印元组")]),s._v(" "),n("p",[s._v("因为元组"),n("code",[s._v("only read")]),s._v("，所以要先构造相应数组，用"),n("code",[s._v("tuple")]),s._v("函数将数组转为元组")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def printTupple():\n    l = [i**2 for i in range(1,21)]\n    print(tuple(l))\nprintTupple()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"day11"}},[s._v("Day11")]),s._v(" "),n("h3",{attrs:{id:"分段打印元组"}},[s._v("分段打印元组")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("tpl = (1,2,3,4,5,6,7,8,9,10)\n\ndef printTupple(t):\n    n = len(t)\n    for i in range(int(n/2)):\n        print(t[i],end=',')\n    print()\n    for i in range(int(n/2), n):\n        print(t[i],end=',')\n\nprintTupple(tpl)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("有点问题，题目本意是将一个元组平分为俩，而且这样写末尾会多个逗号，懒得处理")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("tpl = (1,2,3,4,5,6,7,8,9,10)\nn = len(tpl)\nl1, l2 = [], []\nfor i in range(int(n/2)):\n    l1.append(tpl[i])\nfor i in range(int(n/2),n):\n    l2.append(tpl[i])\nprint(l1)\nprint(l2)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"按要求构造元组"}},[s._v("按要求构造元组")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("tpl = (1,2,3,4,5,6,7,8,9,10)\nt = tuple(i for i in tpl if i%2==0)\nprint(t)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("注意这里的"),n("code",[s._v("(i for i in tpl if i%2==0)")]),s._v("是一个构造器，这个圆括号不代表元组，所以需要使用"),n("code",[s._v("tuple")]),s._v("函数将其转化为一个元组")]),s._v(" "),n("h3",{attrs:{id:"识别字符串"}},[s._v("识别字符串")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("or")]),s._v("连接条件，"),n("code",[s._v("else")]),s._v("处理"),n("code",[s._v("其他情况")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('text = input("Type sth: ")\nif text=="yes" or text=="YES" or text=="Yes":\n    print("Yes")\nelse:\n    print("No")\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"map-lambda-src"}},[s._v("map(lambda, src)")]),s._v(" "),n("p",[s._v("返回一个数组的平方构成的数组")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("map")]),s._v("函数将数组值映射为其平方，映射规则使用"),n("code",[s._v("lambda")]),s._v("函数定义")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("l = [1,2,3,4,5,6,7,8,9,10]\nsquare = list(map(lambda x:x**2, l))\nprint(square)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"filter-lambda-src"}},[s._v("filter(lambda, src)")]),s._v(" "),n("p",[s._v("返回一个数组的平方构成的数组，要求新数组元素均为偶数，奇数省去")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("filter")]),s._v("函数过滤奇数，使用"),n("code",[s._v("map")]),s._v("函数构造数组，用两种不同返回值的"),n("code",[s._v("lambda")]),s._v("函数定义前二者的匿名函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("l = [1,2,3,4,5,6,7,8,9,10]\nsquare = list(map(lambda x:x**2, l))\nodd = list(filter(lambda x:x%2==0, square))\nprint(odd)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这个"),n("code",[s._v("lambda")]),s._v("函数和"),n("code",[s._v("java")]),s._v("的"),n("code",[s._v("lambda")]),s._v("表达式很像")]),s._v(" "),n("ul",[n("li",[s._v("可以是有入参有出参的匿名函数")]),s._v(" "),n("li",[n("code",[s._v("filter")]),s._v("的第一个参数必须是有入参，出参为布尔的匿名函数（当然也可以不是匿名函数，但要求返回值为布尔）")])]),s._v(" "),n("h3",{attrs:{id:"filter-lambda-range"}},[s._v("filter(lambda, range)")]),s._v(" "),n("p",[s._v("将布尔函数通过"),n("code",[s._v("filter")]),s._v("对某一范围数值进行过滤，滤去奇数，保留偶数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("odd = list(filter(lambda x:x%2==0, range(1,21)))\nprint(odd)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这里"),n("code",[s._v("filter")]),s._v("的第二个入参可以是一个数值范围")]),s._v(" "),n("h2",{attrs:{id:"day12"}},[s._v("Day12")]),s._v(" "),n("h3",{attrs:{id:"map-func-range"}},[s._v("map(func, range)")]),s._v(" "),n("p",[s._v("将函数通过map作用于某一数值范围")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def sqr(x):\n    return x*x\nnums = list(map(sqr, range(1,21)))\nprint(nums)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"类静态函数"}},[s._v("类静态函数")]),s._v(" "),n("p",[s._v("当实例在调用静态函数的时候，实际上调用的是"),n("code",[s._v("Class().staticmethod()")]),s._v("，而不是实例中的函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class China:\n    @staticmethod\n    def printNationality():\n        print("I\'m China")\nc = China()\nc.printNationality()\n\nChina().printNationality()\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"子类"}},[s._v("子类")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class China:\n    pass\nclass TaiWan(China):\n    pass\n\nc = China()\nt = TaiWan()\n\nprint(China)\nprint(TaiWan)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"day13"}},[s._v("Day13")]),s._v(" "),n("h3",{attrs:{id:"构造类"}},[s._v("构造类")]),s._v(" "),n("p",[s._v("圆形，使用半径进行构造，该类能够返回面积")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Circle:\n    def __init__(self, n):\n        self.radius = n\n    def arer(self):\n        return 3.14159*self.radius**2\n    \nc = Circle(2)\nc.arer()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("长方形，长宽进行构造，能够返回面积")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Rectangle:\n    def __init__(self, n, m):\n        self.width = n\n        self.length = m\n    def arer(self):\n        return self.width*self.length\n\nr = Rectangle(4,5)\nr.arer()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("形状和其子类正方形")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Shape:\n    def __init__(self):\n        pass\n    def arer(self):\n        return 0\nclass Square(Shape):\n    def __init__(self, length):\n        # i don't know why\n        Shape.__init__(self)\n        self.length = length\n    def arer(self):\n        return self.length**2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("ul",[n("li",[s._v("为什么在初始化子类时要初始化一遍父类")])]),s._v(" "),n("h3",{attrs:{id:"抛出错误"}},[s._v("抛出错误")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('raise RuntimeError("nmsl")\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"day14"}},[s._v("Day14")]),s._v(" "),n("h3",{attrs:{id:"try-except"}},[s._v("try/except")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("try: 可能发生异常的语句")])]),s._v(" "),n("li",[n("code",[s._v("except 异常类型 as 异常实例: 处理办法")])]),s._v(" "),n("li",[n("code",[s._v("except: 处理办法")])])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('def div():\n    return 5/0\ntry:\n    div()\nexcept ZeroDivisionError as z:\n    print(z)\nexcept:\n    print("some other things wrong happened")\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"自定义异常类"}},[s._v("自定义异常类")]),s._v(" "),n("p",[s._v("继承类"),n("code",[s._v("Exception")]),s._v("即可")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class CustomException(Exception):\n    def __init__(self, msg):\n        self.massage = msg\nnum = int(input())\ntry:\n    if num < 10:\n        raise CustomException("num less than 10")\n    else:\n        raise CustomException("num more than 9")\nexcept CustomException as e:\n    print("The error raised: " + e.massage)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("先定义自定义异常类")]),s._v(" "),n("li",[s._v("在"),n("code",[s._v("try")]),s._v("代码块中主动"),n("code",[s._v("raise")]),s._v("异常")]),s._v(" "),n("li",[s._v("在"),n("code",[s._v("except")]),s._v("语句中捕获自定义异常并处理")])]),s._v(" "),n("h3",{attrs:{id:"找出邮箱中的用户名"}},[s._v("找出邮箱中的用户名")]),s._v(" "),n("p",[s._v("邮箱格式为"),n("code",[s._v("username@company.com")]),s._v("，给定若干邮箱，请返回各自的"),n("code",[s._v("username")])]),s._v(" "),n("p",[s._v("将输入用"),n("code",[s._v("@")]),s._v("隔开，输出第一个元素")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('while True:\n    e = input().split("@")\n    if len(e) < 2:\n        break\n    print(e[0])\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("通过字符串匹配")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import re\nemail = "john@google.com elise@python.com"\npattern = "(\\w+)@\\w+.com"\nusername = re.findall(pattern, email)\nprint(username)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("引入库"),n("code",[s._v("re")])]),s._v(" "),n("li",[n("code",[s._v("\\w")]),s._v("表示不定长任意字符串（whatever），在要找出的部分用小括号括住")]),s._v(" "),n("li",[s._v("用"),n("code",[s._v("re.findall()")]),s._v("函数找出所有符合的部分，返回一个字符串数组，第一个入参为正则表达式，第二个为要找的字符串")])]),s._v(" "),n("h2",{attrs:{id:"day15"}},[s._v("Day15")]),s._v(" "),n("h3",{attrs:{id:"找出邮箱中的公司名"}},[s._v("找出邮箱中的公司名")]),s._v(" "),n("blockquote",[n("p",[s._v("正则匹配"),n("code",[s._v("re")]),s._v("库")])]),s._v(" "),n("p",[s._v("邮箱格式为"),n("code",[s._v("username@company.com")]),s._v("，给定若干邮箱，请返回各自的"),n("code",[s._v("company")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import re\nemail = "john@google.com elise@python.com"\npattern = "\\w+@(\\w+).com"\ncompany = re.findall(pattern, email)\nprint(company)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"找出仅由数字构成的单词"}},[s._v("找出仅由数字构成的单词")]),s._v(" "),n("p",[s._v("朴素想法")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sentence = input().split()\nnums = []\nfor word in sentence:\n    flag = True\n    for c in word:\n        if c>'9' or c<'0':\n            flag = False\n            break\n    if flag:\n        nums.append(word)\nprint(nums)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("改进一下朴素想法")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sentence = input().split()\nnums = []\nfor word in sentence:\n    if word.isdigit():\n        nums.append(word)\nprint(nums)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("使用构造器")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("sentence = input().split()\nnums = [word for word in sentence if word.isdigit()]\nprint(nums)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("用"),n("code",[s._v("'\\d'")]),s._v("进行数字的字符串匹配（digit）")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import re\nsentence = input()\npattern = "\\d+"\nnums = re.findall(pattern, sentence)\nprint(nums)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("注意这里"),n("code",[s._v("re")]),s._v("只能处理字符串，所以不能对输入进行分割")])]),s._v(" "),n("h3",{attrs:{id:"unicode-string"}},[s._v("Unicode String")]),s._v(" "),n("blockquote",[n("p",[s._v("万国码")])]),s._v(" "),n("p",[s._v("定义"),n("code",[s._v("unicode string")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("s = u'hello world'\nprint(s)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("将"),n("code",[s._v("ASCII string")]),s._v("转为"),n("code",[s._v("Unicode string")])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('s = input()\ns.encode("utf-8")\nprint(s)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("使用注释表明python程序所用编码")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# -*- coding: utf-8 -*-\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_1-2-2-3-3-4-n-n-1"}},[s._v("1/2+2/3+3/4+...+n/n+1")]),s._v(" "),n("p",[s._v("浮点数确定精准度，使用"),n("code",[s._v("round(浮点数, 精确位数)")]),s._v("函数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("n = int(input())\ntotal = 0.00\nfor i in range(1, n+1):\n    total += i/(i+1)\nprint(total)\nprint(round(total, 2))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"day16"}},[s._v("Day16")]),s._v(" "),n("h3",{attrs:{id:"f-n-f-n-1-100-f-0-0"}},[s._v("f(n) = f(n-1)+100, f(0)=0")]),s._v(" "),n("p",[s._v("简单的递归程序")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def compute(n):\n    if n==0:\n        return 0\n    return compute(n-1)+100\nn = int(input())\nprint(n)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"fibonacci"}},[s._v("Fibonacci")]),s._v(" "),n("p",[n("code",[s._v("f(0)=0,f(1)=1,f(n)=f(n-1)+f(n-2)")])]),s._v(" "),n("p",[s._v("计算斐波那契数列第"),n("code",[s._v("n")]),s._v("位值")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def compute(n):\n    if n <= 1:\n        return n\n    return compute(n-1)+compute(n-2)\nn = int(input())\ncompute(n)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("打印"),n("code",[s._v("n")]),s._v("以内的斐波那契数列")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def f(n, fibo):\n    if n <= 1:\n        fibo[n] = n\n        return fibo[n]\n    fibo[n] = f(n-1,fibo)+f(n-2,fibo)\n    return fibo[n]\n\nn = int(input())\nfibo = [0]*(n+1)\nf(n, fibo)\nfibo = [str(i) for i in fibo]\nprint(','.join(fibo))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("ul",[n("li",[s._v("预先确定数组大小"),n("code",[s._v("fibo = [0]*(n+1)")]),s._v("，该数列长度为"),n("code",[s._v("n+1")]),s._v("，下标范围为"),n("code",[s._v("[0,n]")])]),s._v(" "),n("li",[n("code",[s._v("join")]),s._v("函数作用于字符串数组，要先把"),n("code",[s._v("fibo")]),s._v("数列转为字符串数组")])]),s._v(" "),n("h3",{attrs:{id:"yield-generator"}},[s._v("yield & generator")]),s._v(" "),n("p",[s._v("找偶数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def findEven(n):\n    for i in range(0, n+1):\n        if i%2 == 0:\n            yield i\nn = int(input())\narr = [str(i) for i in findEven(n)]\nprint(','.join(arr))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("找出在"),n("code",[s._v("[0,n]")]),s._v("中被5和7整除的数")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def findNum(n):\n    for i in range(0, n+1):\n        if i%5==0 and i%7==0:\n            yield i\nn = int(input())\narr = [str(i) for i in findNum(n)]\nprint(','.join(arr))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);