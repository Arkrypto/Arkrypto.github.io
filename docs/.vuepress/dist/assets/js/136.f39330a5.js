(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{1433:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("软件业的人乐于做这样的事 —— 找一些词汇，并把它们引申到大量微妙而又互相矛盾的意义 —— 《Patterns of Enterprise Application Architecture》")])]),t._v(" "),s("h2",{attrs:{id:"分布式系统概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统概述"}},[t._v("#")]),t._v(" 分布式系统概述")]),t._v(" "),s("p",[t._v("分布式系统的定义：多个计算机通过网络协同工作而对外表现为一个整体")]),t._v(" "),s("p",[t._v("典型应用")]),t._v(" "),s("ul",[s("li",[t._v("分布式数据库（如 MongoDB、HBase）")]),t._v(" "),s("li",[t._v("分布式存储（如 Hadoop HDFS、Ceph）")]),t._v(" "),s("li",[t._v("分布式计算（如 Spark、Flink）")]),t._v(" "),s("li",[t._v("微服务架构（如 Spring Cloud、Dubbo）")])]),t._v(" "),s("h3",{attrs:{id:"什么是分布式系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式系统"}},[t._v("#")]),t._v(" 什么是分布式系统")]),t._v(" "),s("p",[t._v("要解释什么是分布式系统，得从分布式架构说起，它定义了分布式系统的设计与实现方法，它描述了系统的结构、组件如何交互、数据如何存储、计算如何分配等。可以说，架构是钢筋，而系统是楼房，系统依赖于架构")]),t._v(" "),s("p",[t._v("常见的分布式架构模式")]),t._v(" "),s("ol",[s("li",[t._v("主从架构（Master-Slave）：适用于数据库读写分离，如 MySQL 主从复制")]),t._v(" "),s("li",[t._v("分片架构（Sharding）：适用于高并发场景，如 Elasticsearch 数据分片")]),t._v(" "),s("li",[t._v("微服务架构（Microservices）：适用于企业级应用，如 Spring Cloud/Dubbo")]),t._v(" "),s("li",[t._v("事件驱动架构（EDA, Event-Driven Architecture）：适用于高吞吐业务，如 Kafka 消息队列处理日志流")])]),t._v(" "),s("p",[t._v("在这些架构模式之上，构建了一个个所谓的分布式系统，如最常见的应用淘宝、京东等，都是采用"),s("strong",[t._v("微服务架构")]),t._v("的分布式系统")]),t._v(" "),s("p",[t._v("通常，Spring 小子（没错就是我）开发的所谓分布式系统，都离不开微服务架构（Spring Cloud）")]),t._v(" "),s("h3",{attrs:{id:"为什么要使用分布式设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用分布式设计"}},[t._v("#")]),t._v(" 为什么要使用分布式设计")]),t._v(" "),s("p",[t._v("分布式系统的核心特点")]),t._v(" "),s("ul",[s("li",[t._v("多机协作：任务由多个计算机协作完成，而非单机处理")]),t._v(" "),s("li",[t._v("数据共享：不同节点之间共享数据，可能涉及数据一致性问题")]),t._v(" "),s("li",[t._v("去中心化：避免单点故障，提高系统可用性")]),t._v(" "),s("li",[t._v("并发性：多个节点可以并行处理任务，提高吞吐量")]),t._v(" "),s("li",[t._v("容错能力：某些节点宕机时，系统仍能继续运行")])]),t._v(" "),s("p",[t._v("说白了，就是扩展性好、稳定性高、容错强 —— “狡兔三窟”")]),t._v(" "),s("h2",{attrs:{id:"spring-cloud"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud"}},[t._v("#")]),t._v(" Spring Cloud")]),t._v(" "),s("h3",{attrs:{id:"什么是-spring-cloud"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-spring-cloud"}},[t._v("#")]),t._v(" 什么是 Spring Cloud")]),t._v(" "),s("p",[t._v("刚刚也说到，Spring Cloud 是 Java 生态中最成熟的"),s("strong",[t._v("微服务架构")]),t._v("解决方案之一")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("微服务架构（Microservices Architecture）")]),t._v(" 是一种软件架构风格，它将应用拆分为"),s("strong",[t._v("多个独立运行的服务")]),t._v("，每个服务负责单一业务功能，服务之间通过 API（通常是 HTTP+JSON 或 gRPC）进行通信")])]),t._v(" "),s("p",[t._v("Spring Cloud 就是专门用于"),s("strong",[t._v("构建、管理和维护微服务架构")]),t._v("的框架，提供了一整套完整的微服务架构解决方案，涵盖"),s("strong",[t._v("服务注册发现、负载均衡、配置管理、熔断限流、分布式链路追踪")]),t._v("等关键功能")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("组件")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th",[t._v("具体而言")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Spring Cloud Eureka")]),t._v(" "),s("td",[t._v("服务注册与发现")]),t._v(" "),s("td",[t._v("负责管理微服务实例，类似于 DNS")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud LoadBalancer")]),t._v(" "),s("td",[t._v("负载均衡")]),t._v(" "),s("td",[t._v("让多个实例均衡接收请求")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud OpenFeign")]),t._v(" "),s("td",[t._v("服务调用")]),t._v(" "),s("td",[t._v("通过 HTTP 远程调用其他微服务")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Gateway")]),t._v(" "),s("td",[t._v("API 网关")]),t._v(" "),s("td",[t._v("统一流量入口，路由请求并提供安全控制")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Config")]),t._v(" "),s("td",[t._v("配置管理")]),t._v(" "),s("td",[t._v("统一管理分布式系统的配置")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Sleuth & Zipkin")]),t._v(" "),s("td",[t._v("分布式链路追踪")]),t._v(" "),s("td",[t._v("监控请求的调用链路，排查性能瓶颈")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Resilience4J")]),t._v(" "),s("td",[t._v("熔断限流")]),t._v(" "),s("td",[t._v("保护服务避免雪崩效应（Circuit Breaker）")])]),t._v(" "),s("tr",[s("td",[t._v("Spring Cloud Stream")]),t._v(" "),s("td",[t._v("消息队列")]),t._v(" "),s("td",[t._v("让服务间异步通信（支持 Kafka、RabbitMQ）")])])])]),t._v(" "),s("p",[t._v("Spring Cloud 主要基于 Spring Boot")]),t._v(" "),s("h3",{attrs:{id:"一个经典的-spring-cloud-架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个经典的-spring-cloud-架构"}},[t._v("#")]),t._v(" 一个经典的 Spring Cloud 架构")]),t._v(" "),s("p",[t._v("假设我们有一个电商系统，包含")]),t._v(" "),s("ul",[s("li",[t._v("用户服务（User Service）")]),t._v(" "),s("li",[t._v("订单服务（Order Service）")]),t._v(" "),s("li",[t._v("商品服务（Product Service）")]),t._v(" "),s("li",[t._v("支付服务（Payment Service）")]),t._v(" "),s("li",[t._v("网关（Gateway）")])]),t._v(" "),s("p",[t._v("其体系架构如下")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Spring Cloud Gateway  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------------+")]),t._v("\n                                 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+------------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+      +------------+      +------------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 用户服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 订单服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 商品服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--\x3e | (Order)    | <--\x3e | (Product)  |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+      +------------+      +------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------+")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                                     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+                      +----------------+")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 支付服务    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 消息队列"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Kafka"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Payment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-----------------\x3e | 事件驱动        |")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------+                      +----------------+")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("在这个架构中")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Spring Cloud Gateway")]),t._v(" 充当 API 入口，管理所有 HTTP 请求")]),t._v(" "),s("li",[s("strong",[t._v("Eureka")]),t._v(" 负责管理所有微服务实例，实现"),s("strong",[t._v("服务发现")])]),t._v(" "),s("li",[s("strong",[t._v("Feign")]),t._v(" 让服务之间可以更优雅地相互调用，而不用自己写 HTTP 请求")]),t._v(" "),s("li",[s("strong",[t._v("Resilience4J")]),t._v(" 确保服务故障时自动熔断，防止级联故障")]),t._v(" "),s("li",[s("strong",[t._v("Kafka")]),t._v(" 实现异步消息通信（如订单完成后通知支付服务）")])]),t._v(" "),s("h3",{attrs:{id:"nio-和-netty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nio-和-netty"}},[t._v("#")]),t._v(" NIO 和 Netty")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring Cloud 生态中众多微服务组件的底层通信组件")])]),t._v(" "),s("p",[t._v("Netty：基于 Java NIO 开发的网络流框架，是 Java 领域非常强大的"),s("strong",[t._v("高性能网络通信框架")]),t._v("，很多中间件（Dubbo、Elasticsearch、RocketMQ、gRPC 等）都用它作为底层通信组件")]),t._v(" "),s("p",[t._v("简单来说：Netty 是 "),s("strong",[t._v("一个封装了 Java NIO 的网络框架")]),t._v("，让开发者能轻松构建高性能的 TCP/UDP 网络服务，而不用自己去写繁琐的 Selector、Channel、Buffer 这些低级 API")]),t._v(" "),s("p",[s("strong",[t._v("什么是 NIO？")])]),t._v(" "),s("p",[t._v("NIO（New Input/Output） 是 Java 1.4 引入的一组 API，用于提供**非阻塞（Asynchronous）**的输入输出操作，它让我们能更高效地处理大量的 I/O 操作。")]),t._v(" "),s("p",[t._v("NIO 主要的优势在于能够"),s("strong",[t._v("不阻塞线程")]),t._v("来处理 I/O 操作，它是为了弥补传统的阻塞 I/O（BIO）和 高并发场景下性能瓶颈而设计的")]),t._v(" "),s("ul",[s("li",[t._v("怎么实现的非阻塞？")])]),t._v(" "),s("p",[s("strong",[t._v("Selector")]),t._v(" 和 "),s("strong",[t._v("Channel")]),t._v(" 是 NIO 的核心组成，通过"),s("strong",[t._v("事件驱动")]),t._v("实现异步非阻塞 I/O 操作")]),t._v(" "),s("p",[s("strong",[t._v("Netty 高性能的关键")])]),t._v(" "),s("p",[t._v("🔹 1. 线程池 + 事件驱动")]),t._v(" "),s("p",[t._v("Netty 采用多 Reactor 线程模型，通过 "),s("strong",[t._v("EventLoopGroup + 线程池")]),t._v("，避免传统 BIO 的"),s("strong",[t._v("一线程一连接")]),t._v("低效模式。")]),t._v(" "),s("ul",[s("li",[t._v("BIO（阻塞 IO）：一个线程处理一个连接")]),t._v(" "),s("li",[t._v("NIO（非阻塞 IO）：多个连接共享一个线程")]),t._v(" "),s("li",[t._v("Netty（多 Reactor 模型）：多个线程池高效管理连接")])]),t._v(" "),s("p",[t._v("📌 示例：Netty 线程池")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理连接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理读写")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("hr"),t._v(" "),s("p",[t._v("🔹 2. 零拷贝（Zero-Copy）")]),t._v(" "),s("p",[t._v("Netty 通过 "),s("strong",[t._v("DirectByteBuf、CompositeByteBuf")]),t._v(" 进行零拷贝优化：")]),t._v(" "),s("ul",[s("li",[t._v("减少 CPU 拷贝（避免 "),s("code",[t._v("System.arraycopy")]),t._v("）")]),t._v(" "),s("li",[t._v("减少内存分配（减少 GC 压力）")]),t._v(" "),s("li",[s("strong",[t._v("减少 "),s("strong",[t._v("Buffer")]),t._v(" 复制")]),t._v("（直接操作堆外内存）")])]),t._v(" "),s("p",[t._v("📌 **示例：**Netty 直接使用堆外内存")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unpooled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("directBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接分配堆外内存")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("hr"),t._v(" "),s("p",[t._v("🔹 3. Pooled Buffer（池化内存）")]),t._v(" "),s("p",[t._v("Netty 使用内存池（Buffer Pool），重复利用 ByteBuf，避免反复创建对象。")]),t._v(" "),s("p",[t._v("📌 示例：使用池化的 ByteBuf")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuf")]),t._v(" pooledBuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PooledByteBufAllocator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEFAULT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("hr"),t._v(" "),s("p",[t._v("🔹 4. TCP 粘包/拆包处理")]),t._v(" "),s("p",[t._v("TCP 发送数据时，多个小包可能合并成一个大包（"),s("strong",[t._v("粘包")]),t._v("），或者一个大包被拆成多个小包（"),s("strong",[t._v("拆包")]),t._v("）。Netty 通过"),s("strong",[t._v("解码器")]),t._v("解决此问题。")]),t._v(" "),s("p",[t._v("📌 示例：使用 Netty 提供的拆包解码器")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("ch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipeline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LengthFieldBasedFrameDecoder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("上面这个 LengthFieldBasedFrameDecoder 解码器：")]),t._v(" "),s("ul",[s("li",[t._v("按照数据包长度字段解析消息")]),t._v(" "),s("li",[t._v("避免 TCP 粘包/拆包问题")])]),t._v(" "),s("h2",{attrs:{id:"rpc-框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rpc-框架"}},[t._v("#")]),t._v(" RPC 框架")]),t._v(" "),s("p",[t._v("RPC（Remote Procedure Call，远程过程调用）是一种"),s("strong",[t._v("允许分布式系统中的不同服务像调用本地方法一样调用远程服务")]),t._v("的技术。RPC 框架封装了底层的网络通信、序列化和反序列化，使开发者可以透明地进行远程调用，而不需要手动处理复杂的网络编程")]),t._v(" "),s("h3",{attrs:{id:"why-rpc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-rpc"}},[t._v("#")]),t._v(" Why RPC?")]),t._v(" "),s("p",[t._v("在分布式系统中，不同的服务可能部署在不同的服务器上，它们需要相互通信。例如")]),t._v(" "),s("ul",[s("li",[t._v("电商系统：订单服务需要调用库存服务检查库存，再调用支付服务处理支付")]),t._v(" "),s("li",[t._v("微服务架构：多个微服务之间需要相互调用，比如用户认证服务、订单服务、商品服务等")])]),t._v(" "),s("p",[t._v("它对标的是 "),s("strong",[t._v("HTTP/REST")]),t._v(" 通信，我们当然可以直接通过打请求的方式获取数据，例如")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),t._v(" restTemplate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RestTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" restTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://server/user?id=1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("当然了，这是原始的实现方式，Spring Cloud 提供有优雅一点的平替 —— Spring Cloud OpenFeign，但他仍然是通过 HTTP 实现的服务通信")]),t._v(" "),s("p",[t._v("只要是基于 HTTP，就会有")]),t._v(" "),s("ul",[s("li",[t._v("请求体较大（HTTP 请求头、JSON 序列化等）")]),t._v(" "),s("li",[t._v("性能损耗（HTTP 需要解析文本，序列化和反序列化的开销大）")]),t._v(" "),s("li",[t._v("协议不够高效（HTTP 是基于文本的，而 RPC 可以采用更高效的二进制协议）")])]),t._v(" "),s("p",[t._v("而 RPC 解决了这些问题")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("更高效")]),t._v("：使用"),s("strong",[t._v("二进制协议")]),t._v("（如 Protobuf），减少数据传输体积")]),t._v(" "),s("li",[s("strong",[t._v("更透明")]),t._v("：像调用本地方法一样调用远程服务")]),t._v(" "),s("li",[s("strong",[t._v("更易扩展")]),t._v("：内置"),s("strong",[t._v("负载均衡、服务注册与发现、流量控制")]),t._v("等功能")])]),t._v(" "),s("h3",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("p",[t._v("RPC 框架主要包含"),s("strong",[t._v("客户端、服务端、注册中心")]),t._v("三个核心组件")]),t._v(" "),s("ol",[s("li",[t._v("客户端（Client Stub）\n"),s("ul",[s("li",[t._v("发送请求给服务端，就像调用本地方法一样")]),t._v(" "),s("li",[t._v("负责序列化请求数据（将 Java 对象转换成字节流）")])])]),t._v(" "),s("li",[t._v("服务端（Server Stub）\n"),s("ul",[s("li",[t._v("监听客户端请求，调用对应的本地方法，并返回结果")]),t._v(" "),s("li",[t._v("负责反序列化请求数据（将字节流转换成 Java 对象）")])])]),t._v(" "),s("li",[t._v("注册中心（Service Registry）\n"),s("ul",[s("li",[t._v("维护所有可用的服务列表")]),t._v(" "),s("li",[t._v("客户端在调用时"),s("strong",[t._v("动态发现服务")]),t._v("，而不是写死 IP 地址")]),t._v(" "),s("li",[t._v("常用的注册中心：Zookeeper、Nacos")])])])]),t._v(" "),s("p",[t._v("RPC 典型流程")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1️⃣ 客户端调用本地方法（伪装成普通的 Java 方法）\n2️⃣ RPC 框架将请求数据序列化并发送到服务端\n3️⃣ 服务端接收请求，反序列化数据，并调用目标方法\n4️⃣ 目标方法执行后返回结果\n5️⃣ 服务端将返回结果序列化并发送回客户端\n6️⃣ 客户端接收结果，返回给调用方\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("常见 RPC 框架")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("RPC 框架")]),t._v(" "),s("th",[t._v("语言")]),t._v(" "),s("th",[t._v("主要特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("gRPC")])]),t._v(" "),s("td",[t._v("多语言（Java、Go、Python等）")]),t._v(" "),s("td",[t._v("Google 开发，基于 HTTP/2 和 Protobuf，高性能，支持流式通信")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Dubbo")])]),t._v(" "),s("td",[t._v("Java")]),t._v(" "),s("td",[t._v("阿里巴巴开发，支持服务发现、负载均衡、流量控制")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Motan")])]),t._v(" "),s("td",[t._v("Java")]),t._v(" "),s("td",[t._v("美团开源，轻量级，适用于高并发场景")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Thrift")])]),t._v(" "),s("td",[t._v("多语言（Java、C++、Python等）")]),t._v(" "),s("td",[t._v("Facebook 开发，支持多种语言，适用于跨语言 RPC")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Tars")])]),t._v(" "),s("td",[t._v("多语言（Java、C++、Go等）")]),t._v(" "),s("td",[t._v("腾讯开源，支持大规模分布式应用")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("Hessian")])]),t._v(" "),s("td",[t._v("Java")]),t._v(" "),s("td",[t._v("简单易用，适用于小型应用，序列化采用二进制格式")])])])]),t._v(" "),s("h3",{attrs:{id:"dubbo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dubbo"}},[t._v("#")]),t._v(" Dubbo")]),t._v(" "),s("p",[t._v("Dubbo 是阿里巴巴开源的 Java RPC 框架，基于 Netty 实现，用于微服务间通信")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")])]),t._v(" "),s("p",[t._v("1️⃣ 添加依赖")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.dubbo"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dubbo-spring-boot-starter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.7.8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("2️⃣ 定义接口")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("3️⃣ 实现服务端")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DubboService")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserServiceImpl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("4️⃣ 实现客户端")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DubboReference")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("当然了，在客户端需要对注册中心（如 Nacos）在 application.yaml 进行配置，这样在碰到"),s("code",[t._v("@DubboReference")]),t._v("注解时，系统会自动去注册中心查询需要的服务地址")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dubbo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("application")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" consumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端应用名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nacos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//127.0.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8848")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里配置的是注册中心的地址")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dubbo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("-1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -1 表示随机端口")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("具体调用流程是")]),t._v(" "),s("ol",[s("li",[t._v("服务端（Provider）启动时，它会把自己的服务信息（接口、地址、端口等）注册到 Nacos/Zookeeper")]),t._v(" "),s("li",[t._v("客户端（Consumer）启动时，它会去"),s("strong",[t._v("注册中心查询")]),t._v("需要的服务地址")]),t._v(" "),s("li",[t._v("当代码运行到 "),s("code",[t._v("@DubboReference")]),t._v(" 时，Dubbo 代理会"),s("strong",[t._v("根据注册中心的信息找到远程服务")]),t._v("，然后建立连接并执行调用")])]),t._v(" "),s("p",[t._v("💡 "),s("strong",[t._v("当尝试修改服务端的 IP 地址时，客户端能够自动发现请求地址变化，这是注册中心完成的工作，对于 RPC 客户端是完全透明的")]),t._v(" 🚀")]),t._v(" "),s("p",[t._v("另外，Dubbo 内置了"),s("strong",[t._v("负载均衡、重试机制、超时控制")]),t._v("的功能，均可以在 application.yaml 中进行配置")]),t._v(" "),s("h3",{attrs:{id:"zookeeper-nacos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-nacos"}},[t._v("#")]),t._v(" Zookeeper & Nacos")]),t._v(" "),s("p",[t._v("注册中心是"),s("strong",[t._v("微服务通信的核心")]),t._v("，Dubbo 无论是服务端还是客户端均会在注册中心进行动态管理")]),t._v(" "),s("h2",{attrs:{id:"熔断和限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#熔断和限流"}},[t._v("#")]),t._v(" 熔断和限流")]),t._v(" "),s("h3",{attrs:{id:"熔断-resilience4j"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#熔断-resilience4j"}},[t._v("#")]),t._v(" 熔断：Resilience4J")]),t._v(" "),s("p",[t._v("熔断（Circuit Breaker）和限流（Rate Limiting）是分布式系统中"),s("strong",[t._v("保障服务高可用性和稳定性")]),t._v("的重要手段，主要用于"),s("strong",[t._v("防止雪崩效应")]),t._v("，确保在高并发场景下系统能平稳运行")]),t._v(" "),s("ul",[s("li",[t._v("熔断（Circuit Breaker）类似于"),s("strong",[t._v("家里的电路保险丝")]),t._v("，当电流过大时，保险丝会断开电路，以防电器损坏。在"),s("strong",[t._v("分布式系统")]),t._v("中，熔断机制用于"),s("strong",[t._v("检测服务是否故障，并在故障严重时自动阻止请求，以防止系统崩溃")])])]),t._v(" "),s("p",[t._v("熔断器通常有以下"),s("strong",[t._v("三种状态")])]),t._v(" "),s("ol",[s("li",[t._v("关闭（Closed）：服务正常运行，请求可以自由通过")]),t._v(" "),s("li",[t._v("打开（Open）：当错误率达到阈值，熔断器打开，所有请求都会被拒绝，防止系统继续崩溃")]),t._v(" "),s("li",[t._v("半开（Half-Open）：经过一段时间后，系统尝试放行部分请求进行测试，如果恢复正常，熔断器关闭，否则保持打开状态")])]),t._v(" "),s("p",[t._v("Spring Cloud 以前使用 "),s("strong",[t._v("Hystrix")]),t._v(" 作为熔断组件，但现在推荐使用 "),s("strong",[t._v("Resilience4J")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("1️⃣ 添加依赖")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("io.github.resilience4j"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("resilience4j-spring-boot2"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.7.1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("2️⃣ 代码示例")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@CircuitBreaker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"paymentService"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallbackMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fallbackPayment"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callPaymentService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用远程支付服务")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" restTemplate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://payment-service/pay"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 熔断后的降级方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fallbackPayment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"支付服务不可用，请稍后重试"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[s("strong",[t._v("3️⃣ 配置熔断阈值")])]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resilience4j.circuitbreaker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instances")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paymentService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureRateThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 失败率达到 50% 时触发熔断")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("waitDurationInOpenState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5000ms  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 熔断后 5 秒再尝试恢复")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permittedNumberOfCallsInHalfOpenState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 半开状态时允许 3 个请求进行尝试")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("👉 这样，当支付服务失败率超过 50% 时，请求会自动走 "),s("code",[t._v("fallbackPayment")]),t._v(" 方法，而不会继续尝试访问已故障的支付服务")]),t._v(" "),s("h3",{attrs:{id:"限流-gateway"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限流-gateway"}},[t._v("#")]),t._v(" 限流：Gateway")]),t._v(" "),s("p",[t._v("限流（Rate Limiting）是一种"),s("strong",[t._v("限制请求速率")]),t._v("的技术，防止单个服务被过量请求拖垮，确保系统能够平稳运行")]),t._v(" "),s("p",[t._v("为什么需要限流？")]),t._v(" "),s("ul",[s("li",[t._v("防止流量暴增导致系统崩溃（如双十一购物、秒杀活动）")]),t._v(" "),s("li",[t._v("防止恶意攻击（如爬虫、DDoS 攻击）")]),t._v(" "),s("li",[t._v("合理分配系统资源，保障 VIP 用户的优先级")])]),t._v(" "),s("p",[t._v("Spring Cloud Gateway 内置了基于 "),s("strong",[t._v("Redis 令牌桶算法")]),t._v("的限流功能")]),t._v(" "),s("p",[s("strong",[t._v("1️⃣ 添加 Redis 依赖")])]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-data-redis-reactive"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("2️⃣ 配置限流规则")])]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gateway")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uri")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("predicates")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Path=/orders/"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RequestRateLimiter\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis-rate-limiter.replenishRate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每秒补充 10 个令牌")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis-rate-limiter.burstCapacity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许的最大突发流量")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key-resolver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#{@apiKeyResolver}"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限流的 key 规则")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("strong",[t._v("3️⃣ 自定义 Key 解析器")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyResolver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("userKeyResolver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" exchange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mono")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRemoteAddress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHostName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("👉 这样，每个 IP 地址每秒最多只能访问 10 次 API，超出后会被限流")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("熔断（Circuit Breaker）")]),t._v(" "),s("th",[t._v("限流（Rate Limiting）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("目的")]),t._v(" "),s("td",[t._v("保护服务，防止雪崩")]),t._v(" "),s("td",[t._v("保护系统，防止过载")])]),t._v(" "),s("tr",[s("td",[t._v("触发条件")]),t._v(" "),s("td",[t._v("远程服务故障率高")]),t._v(" "),s("td",[t._v("访问量超出限制")])]),t._v(" "),s("tr",[s("td",[t._v("作用")]),t._v(" "),s("td",[t._v("暂停访问故障服务")]),t._v(" "),s("td",[t._v("限制请求速率")])]),t._v(" "),s("tr",[s("td",[t._v("适用场景")]),t._v(" "),s("td",[t._v("微服务间调用")]),t._v(" "),s("td",[t._v("API 网关、秒杀活动")])]),t._v(" "),s("tr",[s("td",[t._v("实现工具")]),t._v(" "),s("td",[t._v("Resilience4J、Hystrix")]),t._v(" "),s("td",[t._v("Spring Cloud Gateway、Redis")])])])]),t._v(" "),s("h3",{attrs:{id:"熔断-vs-限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#熔断-vs-限流"}},[t._v("#")]),t._v(" 熔断 VS 限流")]),t._v(" "),s("p",[t._v("什么时候使用熔断？什么时候使用限流？")]),t._v(" "),s("ul",[s("li",[t._v("熔断：当你调用的"),s("strong",[t._v("远程服务变慢或崩溃")]),t._v("时，防止请求继续堆积导致整个系统挂掉")]),t._v(" "),s("li",[t._v("限流：当你的服务"),s("strong",[t._v("流量暴增")]),t._v("时，防止服务器资源被耗尽")])]),t._v(" "),s("p",[t._v("现实案例")]),t._v(" "),s("ul",[s("li",[t._v("淘宝双十一：高并发限流，防止流量冲垮系统")]),t._v(" "),s("li",[t._v("微信支付：如果支付接口故障，启用熔断，显示“支付系统繁忙”")])]),t._v(" "),s("p",[s("strong",[t._v("总结")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("熔断")]),t._v("用于"),s("strong",[t._v("保护服务")]),t._v("，防止雪崩效应")]),t._v(" "),s("li",[s("strong",[t._v("限流")]),t._v("用于"),s("strong",[t._v("平稳流量")]),t._v("，防止高并发拖垮系统")]),t._v(" "),s("li",[s("strong",[t._v("Spring Cloud Resilience4J")]),t._v(" 提供"),s("strong",[t._v("熔断")]),t._v("机制，"),s("strong",[t._v("Spring Cloud Gateway")]),t._v(" 提供"),s("strong",[t._v("限流")]),t._v("功能")]),t._v(" "),s("li",[s("strong",[t._v("在实践中")]),t._v("：限流 + 熔断 "),s("strong",[t._v("组合使用")]),t._v("，确保分布式系统稳定运行")])]),t._v(" "),s("h2",{attrs:{id:"消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[t._v("#")]),t._v(" 消息队列")]),t._v(" "),s("h3",{attrs:{id:"kafka"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[t._v("#")]),t._v(" Kafka")]),t._v(" "),s("h3",{attrs:{id:"rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[t._v("#")]),t._v(" RabbitMQ")]),t._v(" "),s("h2",{attrs:{id:"大数据计算框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大数据计算框架"}},[t._v("#")]),t._v(" 大数据计算框架")]),t._v(" "),s("h3",{attrs:{id:"flink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flink"}},[t._v("#")]),t._v(" Flink")]),t._v(" "),s("p",[t._v("在大数据场景中，Flink 经常和 Kafka 搭配，用来消费 Kafka 的数据流")]),t._v(" "),s("ol",[s("li",[t._v("Kafka 生产数据（日志、用户点击、设备数据等）")]),t._v(" "),s("li",[t._v("Flink 进行实时处理（聚合、分析、清洗）")]),t._v(" "),s("li",[t._v("处理结果存入 Kafka / 数据库 / Elasticsearch")])]),t._v(" "),s("p",[t._v("📌 示例：Flink 读取 Kafka 并统计用户点击量")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),t._v(" env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamExecutionEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecutionEnvironment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlinkKafkaConsumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" kafkaConsumer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlinkKafkaConsumer")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_clicks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleStringSchema")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataStream")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafkaConsumer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统计每个用户的点击次数")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tuple2")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keyBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nenv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Kafka Stream Processing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:"spark"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[t._v("#")]),t._v(" Spark")]),t._v(" "),s("p",[t._v("不同于 Flink 专注于流处理，Spark 以批处理为主")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("对比项")])]),t._v(" "),s("th",[s("strong",[t._v("Flink")])]),t._v(" "),s("th",[s("strong",[t._v("Spark")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("计算模式")])]),t._v(" "),s("td",[t._v("主要是"),s("strong",[t._v("流计算")]),t._v("，也支持批处理")]),t._v(" "),s("td",[t._v("主要是"),s("strong",[t._v("批处理")]),t._v("，支持流计算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("延迟")])]),t._v(" "),s("td",[t._v("毫秒级")]),t._v(" "),s("td",[t._v("秒级")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("吞吐量")])]),t._v(" "),s("td",[t._v("高吞吐，适用于高并发")]),t._v(" "),s("td",[t._v("较高吞吐，但稍逊于 Flink")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("故障恢复")])]),t._v(" "),s("td",[s("strong",[t._v("Exactly-Once 语义")]),t._v("，保证数据一致性")]),t._v(" "),s("td",[s("strong",[t._v("At-Least-Once")]),t._v("，可能重复计算")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("API 兼容性")])]),t._v(" "),s("td",[t._v("提供 SQL、Java、Python API")]),t._v(" "),s("td",[t._v("提供 SQL、Scala、Java API")])])])]),t._v(" "),s("h2",{attrs:{id:"elasticsearch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[t._v("#")]),t._v(" Elasticsearch")]),t._v(" "),s("blockquote",[s("p",[t._v("基于 Netty 的分布式搜索引擎")])]),t._v(" "),s("p",[t._v("Elasticsearch 是一个分布式搜索引擎，需要"),s("strong",[t._v("节点间通信")]),t._v("和"),s("strong",[t._v("客户端请求处理")])]),t._v(" "),s("ul",[s("li",[t._v("集群内部通信（节点间同步数据）")]),t._v(" "),s("li",[t._v("客户端请求处理（HTTP 访问 REST API）")])]),t._v(" "),s("p",[t._v("Elasticsearch 采用 Netty 作为底层通信框架，来实现高效的 "),s("strong",[t._v("TCP 连接管理")]),t._v("和"),s("strong",[t._v("数据传输")])]),t._v(" "),s("p",[t._v("刚刚也提到，Kafka 与 Flink 搭配使用以处理大规模流数据，最后的数据流向可以是 Elasticsearch，即用 ES 来承担持久化任务")]),t._v(" "),s("h2",{attrs:{id:"分布式会话管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式会话管理"}},[t._v("#")]),t._v(" 分布式会话管理")]),t._v(" "),s("blockquote",[s("p",[t._v("Spring Session")])]),t._v(" "),s("h3",{attrs:{id:"分布式锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),s("h3",{attrs:{id:"分布式-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式-session"}},[t._v("#")]),t._v(" 分布式 Session")])])}),[],!1,null,null,null);s.default=e.exports}}]);